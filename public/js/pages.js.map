{"version":3,"file":"pages.js","mappings":";;;;;;;;;;;;;;;AAAwD;AACZ;AACyD;;AAEtF;AACf;AACA;AACA;AACA;AACA,wBAAwB,2GAAmB;AAC3C;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,oEAAW;AACnC;AACA;AACA;AACA,wBAAwB,yEAAyE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB,SAAS,MAAM;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6DAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qCAAqC,SAAS,MAAM;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AChC+C;AACL;AAC2B;AACY;AACrB;AACH;;AAEL;;;AAGrC,0BAA0B,0DAAI;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI;;AAER;AACA,6BAA6B,WAAW,IAAI,yBAAyB;AACrE,IAAI;AACJ;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,MAAM,IAAI,oBAAoB,GAAG,MAAM;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa,cAAc,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,yEAAa;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yEAAa;AACzB;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,iCAAiC,aAAa,WAAW,gCAAgC;;AAEzF,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,wFAAsB;AACrC;AACA;AACA;AACA;AACA,IAAI,IAAI;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,+CAAS;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,oEAAa;AACnC;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,uCAAuC;AACvC,kBAAkB,WAAW,2BAA2B,WAAW,sBAAsB,sBAAsB;AAC/G,KAAK,yBAAyB;;AAE9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG,IAAI;;;AAGP,mBAAmB,qEAAgB;AACnC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA,mBAAmB,qEAAQ;AAC3B;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC,aAAa,yBAAyB,aAAa,MAAM,aAAa,KAAK,gCAAgC;AAC7I;AACA,GAAG;;;;AAIH;AACA;AACA,6BAA6B,YAAY;AACzC;;AAEA;;;;;;;;;;AC1aA,cAAc,mBAAO,CAAC,mEAAY;AAClC,6BAA6B,mBAAO,CAAC,kGAAyB;;;AAG9D;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,YAAY,cAAc;AAC1B,4BAA4B,YAAY;AACxC,YAAY,QAAQ;AACpB;AACA;AACA,cAAc,oFAAoF,IAAI;AACtG;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,cAAc,gDAAgD;AAC1E,YAAY,UAAU;AACtB;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,GAAG;AACf;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AC5RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe;;;;;;;;;;;;;;;;AChBQ;AACuC;;AAE/C,gCAAgC,mEAAmB;AAClE;AACA;;AAEA;AACA,0BAA0B,4CAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AC1CiF;AACjC;AACc;;;AAG/C,kCAAkC,oFAAW;AAC5D;AACA;AACA,YAAY,QAAQ;AACpB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA,YAAY,cAAc;AAC1B,4BAA4B,YAAY;AACxC,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAsB;AAChD;AACA;AACA;AACA;AACA,SAAS,mEAAU;AACnB;;AAEA;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;AACA;;;;;;;;;;;ACjHA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACfA,sBAAsB,mBAAO,CAAC,iFAAkB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrBA,sBAAsB,mBAAO,CAAC,iFAAkB;AAChD;AACA,4BAA4B,mBAAO,CAAC,+FAAyB;;AAE7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACVA,wBAAwB,mBAAO,CAAC,yFAAsB;AACtD,0BAA0B,mBAAO,CAAC,6FAAwB;AAC1D,oBAAoB,mBAAO,CAAC,iFAAkB;;AAE9C,aAAa,mBAAO,CAAC,6DAAQ;;AAE7B;AACA,uCAAuC;AACvC;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;;;;;;;;AC1De;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfe;AACf;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACV8B;;;;;;;;;;;;;;;;;;ACDW;AACzC;AACsD;AACE;;AAExD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA,YAAY,2DAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,6BAA6B;AACnC;AACA;AACA;AACA;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8DAAgB;AACvE,mBAAmB,mEAAiB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzMe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAuD;AACnE,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;;;;;ACvI+C;AACe;AACX;;AAEnD,yBAAyB,6DAAc;;AAExB,uBAAuB,0DAAI;;AAE1C;AACA;AACA,YAAY,QAAQ;AACpB;AACA,2BAA2B;AAC3B;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,sBAAsB,gFAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,GAAG;AACf,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,GAAG;AACf;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvmB8B;AACqB;AACK;;;AAGzC,+BAA+B,sCAAM;AACpD;AACA;AACA,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gDAAiB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uEAAc;AACvB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;AChEA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrBe;AACf;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sDAAS;AAC1C;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvFA;AACA,CAAuC;AACO;;AAE9C;AACA,WAAW,0DAAY;AACvB;AACA;AACA,WAAW,sDAAS;AACpB;;;AAGA,iEAAe;;;;;;;;;;;;;;;ACXA;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;ACnCe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACTqC;;;AAGrC;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACe;AACf;AACA;AACA;AACA;;AAEA,EAAE,GAAG;AACL;AACA;AACA;AACA;AACA,SAAS,yDAAO;AAChB;AACA;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACZA,iEAAe,gBAAgB,oBAAoB,WAAW,cAAc,YAAY,aAAa,mBAAmB,eAAe,4BAA4B,qBAAqB,0BAA0B,4BAA4B,0BAA0B,oBAAoB,GAAG,wBAAwB,eAAe,GAAG,yBAAyB,uBAAuB,2BAA2B,WAAW,cAAc,YAAY,aAAa,8BAA8B,gBAAgB,iBAAiB,eAAe,OAAO,iCAAiC,uBAAuB,0BAA0B,eAAe,uBAAuB,4BAA4B,qBAAqB,0BAA0B,+DAA+D,GAAG,oCAAoC,wBAAwB,GAAG,sCAAsC,uBAAuB,aAAa,eAAe,gCAAgC,oBAAoB,GAAG,qCAAqC,qCAAqC,qBAAqB,oBAAoB,GAAG,qCAAqC,2BAA2B,kBAAkB,mBAAmB,kCAAkC,GAAG,qCAAqC,kCAAkC,kBAAkB,GAAG,4CAA4C,uBAAuB,GAAG,CAAC;;;;;;;;;;ACAl5C,mBAAmB,mBAAO,CAAC,uEAAqB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;;;AAIA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,eAAe,kBAAkB,aAAa;AACxE;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,4BAA4B,QAAQ,QAAQ;AACvE;AACA;AACA;AACA,sCAAsC;AACtC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtMA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,iBAAiB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,SAAS,6BAA6B;AACvE;AACA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,qBAAM;AACV,CAAC,qBAAM;AACP;AACA,qBAAqB,qBAAM;;AAE3B,IAAI,qBAAM;AACV,CAAC,qBAAM;AACP;AACA,qBAAqB,qBAAM;;;AAG3B;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc,qBAAqB;AAC/D;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oCAAoC;AAC3E;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,qDAAU;;;AAGrC;;;;;;;;;;AC5OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACRA,sBAAsB,mBAAO,CAAC,yFAAsB;AACpD,yBAAyB,mBAAO,CAAC,kGAAyB;AAC1D,uBAAuB,mBAAO,CAAC,4FAAuB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,4FAAuB;;;AAGnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,KAAK,GAAG,MAAM,GAAG,IAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK,GAAG,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;;;;;;;;;;;;;;;;;ACnR+B;AACqB;;AAErC;;AAEf,gBAAgB,kDAAK;AACrB;AACA;AACA;;AAEA,YAAY,kEAAa;AACzB;AACA;AACA;AACA;AACA,aAAa,kDAAK;AAClB,SAAS,kDAAK;AACd;AACA;;AAEA;AACA,WAAW,kDAAK;AAChB;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA,WAAW,kDAAK;AAChB,iBAAiB,kDAAK;AACtB;AACA,iBAAiB,kDAAK;AACtB;AACA;AACA;AACA,UAAU,kDAAK;AACf;AACA;;AAEA;AACA,WAAW,kDAAK;AAChB;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA,WAAW,kDAAK;AAChB,iBAAiB,kDAAK;AACtB;AACA,iBAAiB,kDAAK;AACtB;AACA;AACA,sBAAsB,kDAAK;AAC3B;AACA;AACA;AACA,UAAU,kDAAK;AACf;AACA;AACA;;AAEA;AACA,WAAW,kDAAK;AAChB;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA,WAAW,kDAAK;AAChB,iBAAiB,kDAAK;AACtB;AACA,iBAAiB,kDAAK;AACtB,UAAU,kDAAK;AACf;AACA,sBAAsB,kDAAK;AAC3B;AACA;AACA;AACA,UAAU,kDAAK;AACf;AACA;AACA;AACA;AACA,WAAW,kDAAK;AAChB;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA,WAAW,kDAAK;AAChB,iBAAiB,kDAAK;AACtB;AACA,iBAAiB,kDAAK;AACtB;AACA;AACA;AACA,UAAU,kDAAK;AACf;AACA;AACA;AACA;AACA,WAAW,kDAAK;AAChB;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA,WAAW,kDAAK;AAChB,iBAAiB,kDAAK;AACtB;AACA,iBAAiB,kDAAK;AACtB;AACA;AACA;AACA,UAAU,kDAAK;AACf;AACA;;AAEA;AACA;AACA,WAAW,kDAAK;AAChB;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA,WAAW,kDAAK;AAChB,iBAAiB,kDAAK;AACtB;AACA,SAAS,kDAAK;AACd;;AAEA;AACA;;;;;;;;;;;;;;;ACpIsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,eAAe;AAC1B;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oEAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC7CA;AACA,CAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA;AACA;AACA;AACA,UAAU,kDAAK;AACf;AACA,SAAS,kDAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kDAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAK;AACjB;AACA,WAAW,kDAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kDAAK;AACf;AACA,SAAS,kDAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAK;AACjB;AACA,WAAW,kDAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kDAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,kDAAK;AACf;AACA;AACA,UAAU,kDAAK;AACf;AACA;AACA;AACA;AACA,SAAS,kDAAK;AACd;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACnIyD;;AAEzD;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAiB;;;AAGvC;;;;;;;;;;;;;;;AClBA,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,4FAAuB;;;;AAInC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,sCAAsC,kBAAkB;AACnF,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,eAAe;AACjF,iEAAiE,eAAe;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK,oBAAoB;AACzB;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA,gDAAgD,cAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,gCAAgC;AAChC;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,cAAc;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,kGAAkG,2DAA2D;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,kGAAkG,2DAA2D;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,0DAA0D;AAC1D,0DAA0D;AAC1D,2DAA2D;AAC3D,iEAAiE;AACjE,2DAA2D;AAC3D;AACA;AACA;AACA,iDAAiD;AACjD;AACA,IAAI;AACJ,kDAAkD;AAClD;AACA,IAAI;AACJ,iDAAiD;AACjD;AACA,IAAI;AACJ,kDAAkD;AAClD;AACA,IAAI;AACJ;AACA;AACA,8CAA8C,6CAA6C;AAC3F;AACA,8DAA8D;AAC9D;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,2BAA2B,+BAA+B;AAC1D,2BAA2B,+BAA+B;AAC1D,yBAAyB,gCAAgC;AACzD,0BAA0B,0BAA0B;AACpD,yBAAyB,oBAAoB;AAC7C,8BAA8B,2BAA2B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,0DAA0D;AAC1D,0DAA0D;AAC1D,qDAAqD;AACrD,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yBAAyB;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,gCAAgC;AAChC;AACA;AACA,oCAAoC,qCAAqC;AACzE,KAAK;AACL;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEsU;AACtU;;;;;;;;;;;ACtuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,4FAAuB;;;AAGnC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;;;;;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC9CA,wBAAwB,mBAAO,CAAC,2EAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;;;;;;;;;;AC5DA,oBAAoB,mBAAO,CAAC,qEAAkB;AAC9C,4BAA4B,mBAAO,CAAC,uFAA2B;AAC/D,wBAAwB,mBAAO,CAAC,+EAAuB;;AAEvD;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA,4CAA4C,sCAAsC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;AC1OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,2EAAqB;AACpD,oBAAoB,mBAAO,CAAC,qEAAkB;;;AAG9C;AACA,yBAAyB;AACzB;AACA;AACA;AACA,IAAI;AACJ;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA,IAAI,IAA6B;AACjC;AACA;AACA,KAAK;AAAA,EAEJ;;AAED,WAAW,qBAAM;AACjB,MAAM,qBAAM;AACZ,EAAE,qBAAM;AACR;AACA,MAAM,qBAAM;AACZ,EAAE,qBAAM;AACR;AACA;;;;;;;;;;;;;AC9TA;AACA,YAAY;AACZ,eAAe;AACf,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnEA,UAAU,mBAAO,CAAC,2DAAY,GAAG,2sBAA2sB;AAC5uB;;;;;;SCDA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;UACA;UACA;UACA;UACA,GAAG;UACH;UACA;UACA,CAAC;;;;;UCPD;;;;;UCAA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNiE;;AAEjE,sEAAuB","sources":["webpack://record-table/./client-js/dynamic-products-list.mjs","webpack://record-table/./client-js/format-price.mjs","webpack://record-table/./client-lib/record-table.mjs","webpack://record-table/./node_modules/@dankolz/abstract-data-service/abstract-data-service.js","webpack://record-table/./node_modules/@dankolz/in-memory-data-service/lib/id-filter-generator.mjs","webpack://record-table/./node_modules/@dankolz/in-memory-data-service/lib/in-memory-data-service-sift.mjs","webpack://record-table/./node_modules/@dankolz/in-memory-data-service/lib/in-memory-data-service.mjs","webpack://record-table/./node_modules/@dankolz/tablesort/lib/anti.js","webpack://record-table/./node_modules/@dankolz/tablesort/lib/comparator-default.js","webpack://record-table/./node_modules/@dankolz/tablesort/lib/comparator-numberish.js","webpack://record-table/./node_modules/@dankolz/tablesort/lib/comparator-sku.js","webpack://record-table/./node_modules/@dankolz/tablesort/lib/first-characters-only.js","webpack://record-table/./node_modules/@dankolz/tablesort/lib/numberish-only.js","webpack://record-table/./node_modules/@dankolz/tablesort/lib/tablesort.js","webpack://record-table/./node_modules/@webhandle/backbone-view/client-js/event-entry-mapper.js","webpack://record-table/./node_modules/@webhandle/backbone-view/client-js/extract-event-names.js","webpack://record-table/./node_modules/@webhandle/backbone-view/client-js/generate-id.js","webpack://record-table/./node_modules/@webhandle/backbone-view/client-js/index.js","webpack://record-table/./node_modules/@webhandle/backbone-view/client-js/view.js","webpack://record-table/./node_modules/@webhandle/drag-sortable-list/client-lib/data-item-worker.mjs","webpack://record-table/./node_modules/@webhandle/drag-sortable-list/client-lib/list-view.mjs","webpack://record-table/./node_modules/@webhandle/form-answer-dialog/client-lib/form-answer-dialog.mjs","webpack://record-table/./node_modules/@webhandle/gather-form-data/gather-form-data.mjs","webpack://record-table/./node_modules/@webhandle/id-generator/generate-id-browser.mjs","webpack://record-table/./node_modules/@webhandle/minimal-browser-event-emitter/client-js/event-emitter.mjs","webpack://record-table/./node_modules/@webhandle/minimal-browser-event-emitter/client-js/index.js","webpack://record-table/./node_modules/@webhandle/minimal-browser-event-emitter/client-js/streamish.mjs","webpack://record-table/./node_modules/@webhandle/objs-to-csv-string/all-keys.mjs","webpack://record-table/./node_modules/@webhandle/objs-to-csv-string/index.mjs","webpack://record-table/./node_modules/add-callback-to-promise/add-callback-to-promise.js","webpack://record-table/./node_modules/ei-dialog/dialog-styles.txt","webpack://record-table/./node_modules/ei-dialog/dialog.js","webpack://record-table/./node_modules/filter-log/filter-log-browser.js","webpack://record-table/./node_modules/filter-log/levels.js","webpack://record-table/./node_modules/form-value-injector/form-value-injector.js","webpack://record-table/./node_modules/input-value-injector/input-value-injector.js","webpack://record-table/./node_modules/objs-to-sql/lib/common-type-reducer.mjs","webpack://record-table/./node_modules/objs-to-sql/lib/create-type-descriptions.mjs","webpack://record-table/./node_modules/objs-to-sql/lib/determine-type.mjs","webpack://record-table/./node_modules/objs-to-sql/lib/determine-types.mjs","webpack://record-table/./node_modules/objs-to-sql/lib/types.mjs","webpack://record-table/./node_modules/select-value-injector/select-value-injector.js","webpack://record-table/./node_modules/sift/es5m/index.js","webpack://record-table/./node_modules/textarea-value-injector/textarea-value-injector.js","webpack://record-table/./node_modules/tripartite/active-element.js","webpack://record-table/./node_modules/tripartite/calculate-relative-path.js","webpack://record-table/./node_modules/tripartite/evaluate-in-context.js","webpack://record-table/./node_modules/tripartite/execution-context.js","webpack://record-table/./node_modules/tripartite/resolve-data-path.js","webpack://record-table/./node_modules/tripartite/tripartite.js","webpack://record-table/./node_modules/value-injector-common/value-injector-common.js","webpack://record-table/./views/webhandle/record-table/frame.tri","webpack://record-table/webpack/bootstrap","webpack://record-table/webpack/runtime/define property getters","webpack://record-table/webpack/runtime/global","webpack://record-table/webpack/runtime/hasOwnProperty shorthand","webpack://record-table/webpack/runtime/make namespace object","webpack://record-table/./client-js/pages.mjs"],"sourcesContent":["import RecordTable from '../client-lib/record-table.mjs'\nimport formatPrice from './format-price.mjs'\nimport InMemoryDataService from '@dankolz/in-memory-data-service/lib/in-memory-data-service-sift.mjs'\n\nexport default async function setupDynamicProductsList() {\n\tlet container = document.querySelector('#dynamic-products-list')\n\tif(container) {\n\t\tlet data = (await (await fetch('/data1')).text())\n\t\tlet objs = data.split('\\n').filter(line => !!line).map(line => JSON.parse(line))\n\t\tlet dataService = new InMemoryDataService({\n\t\t\tcollections: {\n\t\t\t\tdefault: objs\n\t\t\t}\n\t\t})\n\t\t\n\t\tlet recordTable = new RecordTable({\n\t\t\tdataService: dataService\n\t\t\t, chosenFields: ['title', 'sku', 'upc']\n\t\t\t, editUrlCreator: (row) => {\n\t\t\t\treturn `/products/${(row.getAttribute('data-_id') || row.getAttribute('data-id')).toString()}/edit`\n\t\t\t}\n\t\t\t, fieldDescriptions: [\n\t\t\t\t{\n\t\t\t\t\tfield: 'sku'\n\t\t\t\t\t, label: 'SKU'\n\t\t\t\t\t, formatter: (value, fieldName, obj) => {\n\t\t\t\t\t\treturn `<a href=\"/products/${obj.id || obj._id}/edit\">${value}</a>`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t, {\n\t\t\t\t\tfield: 'price'\n\t\t\t\t\t, label: 'Price'\n\t\t\t\t\t, formatter: (value, fieldName, obj) => {\n\t\t\t\t\t\treturn formatPrice(value)\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t, type: 'cents'\n\t\t\t\t}\n\t\t\t\t, {\n\t\t\t\t\tfield: 'quantity'\n\t\t\t\t\t, label: 'Quantity'\n\t\t\t\t\t, type: 'number'\n\t\t\t\t}\n\t\t\t\t, {\n\t\t\t\t\tfield: 'productCategory'\n\t\t\t\t\t, label: 'Category'\n\t\t\t\t\t, formatter: (value, fieldName, obj) => {\n\t\t\t\t\t\tlet val = value\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(obj.productSubtype) {\n\t\t\t\t\t\t\tval += ' / ' + obj.productSubtype\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn val\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t, {\n\t\t\t\t\tfield: 'title'\n\t\t\t\t\t, label: 'Title'\n\t\t\t\t\t, formatter: (value, fieldName, obj) => {\n\t\t\t\t\t\treturn `<a href=\"/products/${(obj.id || obj._id || '').toString()}/edit\">${value}</a>`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t, {\n\t\t\t\t\tfield: 'artcode'\n\t\t\t\t\t, label: 'Artist Code'\n\t\t\t\t}\n\t\t\t\t, {\n\t\t\t\t\tfield: 'upc'\n\t\t\t\t\t, label: 'UPC'\n\t\t\t\t}\n\t\t\t\t, {\n\t\t\t\t\tfield: 'image'\n\t\t\t\t\t, label: 'Image'\n\t\t\t\t\t, formatter: (value, fieldName, obj) => {\n\t\t\t\t\t\tlet src = ''\n\t\t\t\t\t\tif(obj.productimage) {\n\t\t\t\t\t\t\tsrc += obj.productimage\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(obj.secondaryImages && obj.secondaryImages.length > 0) {\n\t\t\t\t\t\t\tsrc += obj.secondaryImages[0]\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(src) {\n\t\t\t\t\t\t\tsrc += '?webhandle-image-resizer&maxWidth=100px'\n\t\t\t\t\t\t\treturn `<img src=\"${src}\" style=\"width: 100px;\" />`\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t\trecordTable.appendTo(container)\n\t\trecordTable.render()\n\t}\n\n}\n","\nfunction reverseString(str) {\n\treturn str.split(\"\").reverse().join(\"\")\n}\n\nexport default function formatPrice(data) {\n\tif (!data) {\n\t\treturn ''\n\t}\n\tlet num = parseFloat(data)\n\tlet s = '$' + Math.round(num * 100) / 100\n\tlet i = s.lastIndexOf('.')\n\tif (i > 0) {\n\t\twhile (i > s.length - 3) {\n\t\t\ts += '0'\n\t\t\ti = s.lastIndexOf('.')\n\t\t}\n\t}\n\telse {\n\t\ts += '.00'\n\t}\n\tif (s.length > 10) {\n\t\ts = reverseString(s)\n\t\ts = s.substring(0, 6) + ',' + s.substring(6, 9) + ',' + s.substring(9)\n\t\ts = reverseString(s)\n\t}\n\telse if (s.length > 7) {\n\t\ts = reverseString(s)\n\t\ts = s.substring(0, 6) + ',' + s.substring(6)\n\t\ts = reverseString(s)\n\t}\n\treturn s\n}\n","import { View } from '@webhandle/backbone-view'\nimport Tablesort from '@dankolz/tablesort'\nimport frameTemplate from '../views/webhandle/record-table/frame.tri'\nimport createTypeDescriptions from \"objs-to-sql/lib/create-type-descriptions.mjs\"\nimport FormAnswerDialog from '@webhandle/form-answer-dialog'\nimport csvConversion from '@webhandle/objs-to-csv-string'\n\nimport ListView from '@webhandle/drag-sortable-list'\n\n\nexport default class RecordTable extends View {\n\n\tconstructor(options) {\n\t\tsuper(options)\n\n\t\tif (!this.chosenFields) {\n\t\t\tthis.chosenFields = ['_id', 'id']\n\t\t}\n\t\tif (options.fieldDescriptions) {\n\t\t\tthis.keyedFieldDescriptions = options.fieldDescriptions.reduce((acc, item) => {\n\t\t\t\tacc[item.field] = item\n\t\t\t\treturn acc\n\t\t\t}, {})\n\n\t\t\tthis.searchFieldOptions = options.fieldDescriptions.map(item => {\n\t\t\t\treturn `<option value=\"${item.field}\">${item.label || item.field}</option>`\n\t\t\t}).join()\n\t\t}\n\t\tthis.numberishFieldTypes = options.numberishFieldTypes || ['number', 'cents']\n\t\tif (!this.displayClasses) {\n\t\t\tthis.displayClasses = 'ei-styling ei-form'\n\t\t}\n\n\n\t}\n\n\n\tpreinitialize() {\n\t\tthis.events = {\n\t\t\t'click .show-all': 'showAll'\n\t\t\t, 'click .search button': 'doSearch'\n\t\t\t, 'click [name=\"fieldOptions\"]': 'showFieldOptions'\n\t\t\t, 'keyup .search input[name=search]': 'doSearchValueChange'\n\t\t\t, 'click .download-csv': 'doDownloadObjectsCsv'\n\t\t\t, 'click .download-table-csv': 'doDownloadTableCsv'\n\t\t\t, 'click tbody tr': 'selectRow'\n\t\t\t, 'click .row-options .edit-row': 'editRow'\n\t\t\t, 'click .row-options .delete-rows': 'deleteRows'\n\t\t}\n\t}\n\n\t_generateDownloadButtons() {\n\t\treturn `\n\t\t\t<button class=\"download-table-csv\" type=\"button\">Download Table CSV</button>\t\n\t\t\t<button class=\"download-csv\" type=\"button\">Download Objects CSV</button>\t\n\t\t`\n\t}\n\n\tgetSelectedRows() {\n\t\tlet rows = this.el.querySelectorAll('tbody tr.selected')\n\t\treturn rows\n\t}\n\n\tdeselectAllRows() {\n\t\tlet rows = this.getSelectedRows()\n\t\tfor (let row of rows) {\n\t\t\trow.classList.remove('selected')\n\t\t}\n\t}\n\n\tasync editRow(evt, selected) {\n\t\tevt.preventDefault()\n\t\tif (this.editUrlCreator) {\n\t\t\tlet url = this.editUrlCreator(this.getSelectedRows()[0])\n\t\t\twindow.location = url\n\t\t}\n\t}\n\n\tasync deleteRows(evt, selected) {\n\t\tevt.preventDefault()\n\n\t\tlet rows = this.getSelectedRows()\n\t\tfor (let row of rows) {\n\t\t\tlet id = row.getAttribute('data-id') || row.getAttribute('data-_id')\n\t\t\tawait this.dataService.remove(id)\n\t\t}\n\n\t\tthis.showObjs(this.lastObjs)\n\t\tlet status = this.getStatusElement()\n\t\tstatus.innerHTML = `Selected objects deleted.`\n\t\tthis.el.querySelector('.records').innerHTML = ''\n\t\tthis.setRowWorkClasses()\n\t}\n\n\tsetRowWorkClasses() {\n\t\tlet selectedRowsCount = this.getSelectedRows().length\n\t\tlet rowOptions = this.el.querySelector('.row-work .row-options')\n\n\t\tif (selectedRowsCount == 0) {\n\t\t\trowOptions.classList.remove('edit')\n\t\t\trowOptions.classList.remove('delete')\n\t\t}\n\t\telse if (selectedRowsCount == 1) {\n\t\t\tif (this.editUrlCreator) {\n\t\t\t\trowOptions.classList.add('edit')\n\t\t\t}\n\t\t\trowOptions.classList.add('delete')\n\t\t}\n\t\telse if (selectedRowsCount > 1) {\n\t\t\trowOptions.classList.remove('edit')\n\t\t\trowOptions.classList.add('delete')\n\t\t}\n\n\t}\n\n\tasync selectRow(evt, selected) {\n\t\tif(evt.target.closest('a')) {\n\t\t\t// somebody clicked a link, so let's let that go through\n\t\t\treturn\n\t\t}\n\t\tevt.preventDefault()\n\n\t\tif (evt.shiftKey) {\n\t\t\tselected.classList.toggle('selected')\n\n\t\t}\n\t\telse if (evt.ctrlKey) {\n\t\t\tselected.classList.toggle('selected')\n\t\t}\n\t\telse {\n\t\t\tthis.deselectAllRows()\n\t\t\tselected.classList.toggle('selected')\n\t\t}\n\n\t\tthis.setRowWorkClasses()\n\t}\n\n\t_generateHeaders() {\n\t\tlet head = `<thead>\n\t\t\t<tr>`\n\t\tfor (let field of this.chosenFields) {\n\t\t\tlet label = field\n\t\t\tlet comparatorAttribute = ''\n\t\t\tif (this.keyedFieldDescriptions && this.keyedFieldDescriptions[field]) {\n\t\t\t\tlet fieldDef = this.keyedFieldDescriptions[field]\n\t\t\t\tlabel = fieldDef.label || label\n\t\t\t\tif (this.numberishFieldTypes.includes(fieldDef.type)) {\n\t\t\t\t\tcomparatorAttribute = ' data-comparator=\"numberish\" '\n\t\t\t\t}\n\t\t\t}\n\t\t\thead += `<th data-field=${field}\" ${comparatorAttribute}>${label}</th>`\n\t\t}\n\t\thead += `</tr>\n\t\t</thead>\t\n\t\t`\n\t\treturn head\n\t}\n\n\t_generateObjectHeaders() {\n\t\tlet headers = {}\n\t\tfor (let field of this.chosenFields) {\n\t\t\tlet label = field\n\t\t\tif (this.keyedFieldDescriptions && this.keyedFieldDescriptions[field]) {\n\t\t\t\tlet fieldDef = this.keyedFieldDescriptions[field]\n\t\t\t\tlabel = fieldDef.label || label\n\t\t\t}\n\t\t\theaders[field] = label\n\t\t}\n\t\treturn headers\n\t}\n\n\t_valToString(val) {\n\t\tif (!val) {\n\t\t\treturn ''\n\t\t}\n\t\treturn val\n\t}\n\n\tdefaultValueFormatter(value, fieldName, obj) {\n\t\treturn value\n\t}\n\n\t_processingRecordSelection() {\n\t\tthis.getRecordsElement().innerHTML = ''\n\t\tthis.getStatusElement().innerHTML = `<p style=\"text-align: center\">(The records are being found.)</p>`\n\t}\n\n\t_renderObject(obj) {\n\t\tlet rendered = {}\n\t\tfor (let field of this.chosenFields) {\n\t\t\tlet desc = this.keyedFieldDescriptions[field]\n\t\t\tlet formatter = this.defaultValueFormatter\n\t\t\tif (desc && desc.formatter) {\n\t\t\t\tformatter = desc.formatter\n\t\t\t}\n\t\t\trendered[field] = formatter(obj[field], field, obj)\n\t\t}\n\t\treturn rendered\n\t}\n\t_renderRow(obj) {\n\t\tlet row = `\n\t\t<tr data-id=\"${obj.id || ''}\" data-_id=\"${obj._id}\" >`\n\t\tfor (let field of this.chosenFields) {\n\t\t\tlet desc = this.keyedFieldDescriptions[field]\n\t\t\tlet formatter = this.defaultValueFormatter\n\t\t\tif (desc && desc.formatter) {\n\t\t\t\tformatter = desc.formatter\n\t\t\t}\n\t\t\trow += `<td>${formatter(obj[field], field, obj)}</td>`\n\t\t}\n\t\trow += `</tr>`\n\t\treturn row\n\t}\n\n\tasync doDownloadObjectsCsv(evt, selected) {\n\t\tevt.preventDefault()\n\t\tif (!this.lastObjs) {\n\t\t\treturn\n\t\t}\n\t\tlet csv = csvConversion(this.lastObjs)\n\t\tthis.downloadData(csv, \"object-data.csv\")\n\t}\n\n\tasync doDownloadTableCsv(evt, selected) {\n\t\tevt.preventDefault()\n\t\tif (!this.lastObjs) {\n\t\t\treturn\n\t\t}\n\t\tlet data = []\n\t\tlet headers = this._generateObjectHeaders()\n\t\tlet records = this.getRecordsElement()\n\t\tlet rows = records.querySelectorAll('table tbody tr')\n\t\tfor (let row of rows) {\n\t\t\tlet obj = {}\n\t\t\tlet dats = [...row.querySelectorAll('td')].map(td => td.innerText)\n\t\t\tlet heads = Object.keys(headers)\n\t\t\twhile (heads.length > 0 && dats.length > 0) {\n\t\t\t\tobj[heads.pop()] = dats.pop()\n\t\t\t}\n\t\t\tdata.push(obj)\n\t\t}\n\t\tlet csv = csvConversion(data, {\n\t\t\theaders: headers\n\t\t})\n\t\tthis.downloadData(csv, \"table-data.csv\")\n\t}\n\n\tasync showAll(evt, selected) {\n\t\tevt.preventDefault()\n\t\tthis._processingRecordSelection()\n\t\tsetTimeout(async () => {\n\t\t\tlet objs = await this.dataService.fetch({})\n\t\t\tthis.lastObjs = objs\n\t\t\tthis.showObjs(objs)\n\t\t\tlet status = this.getStatusElement()\n\t\t\tstatus.innerHTML = `Showing ${objs.length} objects. ${this._generateDownloadButtons()}`\n\n\t\t}, 1)\n\t}\n\n\tdownloadData(data, filename) {\n\t\tlet encoder = new TextEncoder();\n\t\tlet buffer = encoder.encode(data);\n\t\tlet blob = new Blob([buffer])\n\t\tconst blobURL = URL.createObjectURL(blob)\n\t\tconst a = document.createElement(\"a\")\n\t\ta.href = blobURL;\n\t\ta.style = \"display: none\";\n\n\t\tif (filename && filename.length) {\n\t\t\ta.download = filename;\n\t\t}\n\t\tdocument.body.appendChild(a);\n\t\ta.click()\n\t}\n\n\tshowObjs(objs) {\n\n\t\tif (!this.keyedFieldDescriptions) {\n\t\t\tlet descs = createTypeDescriptions(objs)\n\t\t\tthis.fieldDescriptions = descs\n\t\t\tthis.keyedFieldDescriptions = descs.reduce((acc, field) => {\n\t\t\t\tacc[field.field] = field\n\t\t\t\treturn acc\n\t\t\t}, {})\n\t\t}\n\n\t\tlet html =\n\t\t\t'<table>' +\n\t\t\tthis._generateHeaders() +\n\t\t\t'<tbody>'\n\t\tfor (let obj of objs) {\n\t\t\thtml += this._renderRow(obj)\n\t\t}\n\n\t\thtml += '</tbody></table>'\n\n\t\tlet div = document.createElement('div')\n\t\tdiv.innerHTML = html\n\n\t\tthis.getRecordsElement().innerHTML = ''\n\t\tthis.getRecordsElement().appendChild(div)\n\n\t\tlet table = this.el.querySelector('.records table')\n\t\tthis.tablesort = new Tablesort(table)\n\t}\n\n\tgetStatusElement() {\n\t\tlet status = this.el.querySelector('.status')\n\t\treturn status\n\t}\n\n\tgetRecordsElement() {\n\t\treturn this.el.querySelector('.records')\n\t}\n\n\trender() {\n\t\tthis.el.innerHTML = frameTemplate({\n\t\t\tfieldOptions: this.searchFieldOptions\n\t\t\t, displayClasses: this.displayClasses\n\t\t})\n\t\treturn this\n\t}\n\n\tgenInputForFieldDesc(desc) {\n\t\treturn `<label style=\"display: block;\">\\n\n\t\t\t<input name=\"${desc.field}\" type=\"checkbox\" value=\"${desc.field}\" style=\"width: auto; display: inline-block;\" /> \n\t\t\t${desc.label || desc.field}</label>\\n`\n\n\t}\n\n\tasync showFieldOptions(evt, selected) {\n\t\tlet form = `<p>\n\t\tChoose the fields to show in the table. Drag the fields up and down to change their order.\n\t\t</p>\n\t\t<div class=\"ei-form\">`\n\n\t\tfor (let fieldName of this.chosenFields) {\n\t\t\tlet desc = this.keyedFieldDescriptions[fieldName]\n\t\t\tif (desc) {\n\t\t\t\tform += this.genInputForFieldDesc(desc)\n\t\t\t}\n\t\t}\n\t\tfor (let desc of this.fieldDescriptions) {\n\t\t\tif (this.chosenFields.includes(desc.field)) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tform += this.genInputForFieldDesc(desc)\n\t\t}\n\t\tform += '</div>'\n\n\t\tlet cur = this.chosenFields.reduce((acc, item) => {\n\t\t\tacc[item] = item\n\t\t\treturn acc\n\t\t}, {})\n\n\n\t\tlet dialog = new FormAnswerDialog({\n\t\t\ttitle: 'Choose Fields for Table'\n\t\t\t, body: form\n\t\t\t, data: cur\n\t\t})\n\t\tdialog.answerAfterOpen = dialog.afterOpen\n\t\tdialog.afterOpen = function (bodyElement, self) {\n\n\t\t\tdialog.answerAfterOpen(bodyElement, self)\n\n\t\t\tlet list1 = new ListView({\n\t\t\t\tel: bodyElement.querySelector('.ei-form')\n\t\t\t\t, mobileHandleSelector: 'label'\n\t\t\t})\n\t\t\tlist1.render()\n\t\t}\n\n\n\t\tlet data = await dialog.open()\n\t\tif (data) {\n\t\t\tthis.chosenFields = Object.keys(data)\n\t\t\tthis.showObjs(this.lastObjs)\n\t\t}\n\t}\n\n\tasync doSearchValueChange(evt, selected) {\n\t\tif (evt.code == 'Enter') {\n\t\t\tthis.doSearch(evt, selected)\n\t\t}\n\t}\n\n\tasync doSearch(evt, selected) {\n\t\tthis._processingRecordSelection()\n\t\tsetTimeout(async () => {\n\t\t\tlet status = this.getStatusElement()\n\t\t\tlet searchStringEl = this.el.querySelector('.search input')\n\t\t\tlet searchFieldEl = this.el.querySelector('.search select')\n\t\t\tlet searchString = searchStringEl.value\n\t\t\tlet searchField = searchFieldEl.value\n\n\t\t\tif (!searchField || !searchString) {\n\t\t\t\tstatus.innerHTML = `<p>no search performed</p>`\n\t\t\t\tthis.getRecordsElement().innerHTML = ''\n\t\t\t\tthis.lastObjs = []\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstatus.innerHTML = `<p>performing search</p>`\n\n\t\t\t\tlet query = {}\n\t\t\t\tquery[searchField] = new RegExp(searchString, 'i')\n\n\t\t\t\tlet objs = await this.dataService.fetch(query)\n\t\t\t\tthis.lastObjs = objs\n\t\t\t\tthis.showObjs(objs)\n\n\t\t\t\tsearchFieldEl.value = ''\n\t\t\t\tsearchStringEl.value = ''\n\n\t\t\t\tstatus.innerHTML = `Showing ${objs.length} objects matching field ${searchField} to \"${searchString}\". ${this._generateDownloadButtons()}`\n\t\t\t}\n\t\t}, 1)\n\n\n\n\t}\n\toneClicked(evt, selected) {\n\t\tconsole.log(`one clicked ${selected.id}`)\n\t}\n\n}","const filog = require('filter-log')\nconst addCallbackToPromise = require('add-callback-to-promise')\n\n\nclass DataService {\n\n\t/**\n\t * \n\t * @param {object} options\n \t * @param {string} [options.serviceName] Sets the name of this service for logging, and possibly other purposes\n \t * @param {boolean} [options.useIndependentIds] If true, records will get unique ID strings which are not tied to the underylying datastore\n \t * @param {object} options.collections an object holding the MongoDB collections this service will use, keyed by collection name\n \t * @param {object} [options.collections.default] the default collection. Technically optional, but the basic functions which\n\t * don't require the caller to specify the collection won't work if not set.\n\t * @param {EventEmitter} [options.notification] An EventEmitter that will be notified on create, update, and delete. The notification is:\n\t * emit('object-change', { the object }, changeType: create, update, delete)\n\t * @param {string} [options.eventName] The event name which will be used for the emitter. By default this is 'object-change'.\n\t * \n\t */\n\tconstructor({serviceName = 'dataService', useIndependentIds = true, eventName = 'object-change'} = {}) {\n\t\tObject.assign(this, {\n\t\t\tlog: filog(serviceName + ':')\n\t\t\t, collections: {}\n\t\t\t, useIndependentIds: useIndependentIds\n\t\t\t, eventName: eventName\n\t\t}, arguments[0])\n\t}\n\t\n\t/**\n\t * EXTENDING CLASSES MUST IMPLEMENT THIS METHOD.\n\t * Generates storage system independent random ids\n\t * @returns a string\n\t */\n\tgenerateId() {\n\t\tthrow new Error('generateId not implemented')\n\t\t/*\n\t\t\tcheck out abstract-data-service-node and abstract-data-service-browser for implementations\n\t\t*/\n\t}\n\t\n\t/**\n\t * Finds documents via a MongoDB query object\n\t * @param {object} query \n\t * @returns An array of resultant objects, possibly empty.\n\t */\n\tasync fetch(query) {\n\t\treturn this._fetchByQuery(this.collections.default, query)\n\t}\n\t\n\t/**\n\t * Fetch a single document.\n\t * @param {*} id A query or a string which is the id\n\t * @returns Either a single document or null\n\t */\n\tasync fetchOne(id) {\n\t\tlet items = await this._fetchById(this.collections.default, id)\n\t\tif(items && items.length > 0) {\n\t\t\treturn items[0]\n\t\t}\n\t\treturn null\n\t}\n\t/**\n\t * Store a document. It will replace or insert if there's no _id member\n\t * @param {*} focus \n\t * @returns A promise that resolves to the saved object and the native mongo result\n\t * in an result object [obj, native]\n\t */\n\tasync save(focus) {\n\t\treturn this._save(this.collections.default, focus) \n\t}\n\t/**\n\t * Stores an array of documents. Returns an array of promises.\n\t * @param {array} foci \n\t * @returns \n\t */\n\tsaveMany(foci) {\n\t\treturn this._saveMany(this.collections.default, foci) \n\t}\n\t/**\n\t * Removes one of more documents. This assumes the id is actually just an id,\n\t * but will work fine if a broader query is passed.\n\t * @param {*} id A query or a string which is the id\n\t * @returns \n\t */\n\tasync remove(id) {\n\t\treturn this._removeByQuery(this.collections.default, this.createIdQuery(id))\n\t}\n\n\t/**\n\t * Creates an object to query the db by an object's ID\n\t * @param {*} id \n\t * @returns \n\t */\n\tcreateIdQuery(id) {\n\t\tif (Array.isArray(id)) {\n\t\t\treturn id.map(this.createIdQuery)\n\t\t}\n\t\tif (typeof id === 'string') {\n\t\t\treturn {\n\t\t\t\t$or: [{\n\t\t\t\t\t_id: id\n\t\t\t\t}\n\t\t\t\t, {\n\t\t\t\t\tid: id\n\t\t\t\t}]\n\t\t\t}\n\t\t}\n\t\treturn id\n\t}\n\n\t/**\n\t * Transforms the results of fetches. This is sometimes done when the object from the database should be augmented\n\t * with additional information or should be converted into an object with a specific class. Override this function\n\t * at need. By default it does essentially nothing.\n\t * @param {object[]} result An array of objects from the database\n\t * @param {string} collectionName The name of the collection these objects came from. If this class only queries a single\n\t * collection, this parameter won't be of much use. If it queries multiple collection, this will help inform the method\n\t * what to do with the object.\n\t * @returns A promise which results in an array of objects.\n\t */\n\tasync postFetchesProcessor(result, collectionName) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tresolve(result)\n\t\t})\n\t}\n\n\t/**\n\t * The internal implementation of fetching objects\n\t * @param {object} collection Could be anyting. An array, a mongo collection, even just a string to \n\t * identify what underlying datastore to use\n\t * @param {object|array} query An object in the mongodb query style, or an array of those objects\n\t * @returns a promise which resolves to the result of the fetch, generally an array of result objects.\n\t */\n\tasync _doInternalFetch(collection, query) {\n\t\tthrow new Error('_doInternalFetch not implemented')\n\t\t/*\n\t\t\t// Code will look something like this:\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tresolve([{}])\n\t\t\t})\n\t\t*/\n\t}\n\t\n\t/**\n\t * Fetches a list of documents from the collection.\n\t * @param {Collection} collection A MongoDB Collection\n\t * @param {object,array} query A mongodb query object. Can me null or {} if you want all documents. \n\t * @param {function} callback (optional) A callback if that's how you get down. This function would normally be used with promises and await.\n\t * @returns A promise which resolves to an array of documents\n\t */\n\t_fetchByQuery(collection, query = {}, callback) {\n\t\tlet p = new Promise((resolve, reject) => {\n\t\t\tthis._doInternalFetch(collection, query).then(result => {\n\t\t\t\tthis.postFetchesProcessor(result, collection.collectionName).then((processed) => {\n\t\t\t\t\tresolve(processed)\n\t\t\t\t})\n\t\t\t}).catch(err => {\n\t\t\t\tthis.log.error(err)\n\t\t\t\treturn reject(err)\n\t\t\t})\n\t\t})\n\t\treturn addCallbackToPromise(p, callback)\n\t}\n\t\n\t/**\n\t * EXTENDING CLASSES MUST IMPLEMENT THIS METHOD.\n\t * The internal implementation of removing objects based on a query.\n\t * @param {object} collection Could be anyting. An array, a mongo collection, even just a string to \n\t * identify what underlying datastore to use\n\t * @param {object|array} query An object in the mongodb query style, or an array of those objects\n\t * @returns a promise which resolves to the result of the delete, generally an internal result object\n\t */\n\tasync _doInternalRemove(collection, query) {\n\t\tthrow new Error('_doInternalRemove not implemented')\n\t\t/*\n\t\t\t// Code will look something like this:\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tresolve(query)\n\t\t\t})\n\t\t*/\n\t}\n\t\n\t_removeByQuery(collection, query = {}, callback) {\n\t\tlet p = new Promise((resolve, reject) => {\n\t\t\tthis._doInternalRemove(collection, query).then(result => {\n\t\t\t\tthis._notify(query, 'delete')\n\t\t\t\tresolve(result)\n\t\t\t}).catch(err => {\n\t\t\t\tthis.log.error(err)\n\t\t\t\treturn reject(err)\n\t\t\t})\n\t\t})\n\t\treturn addCallbackToPromise(p, callback)\n\t}\n\n\t/**\n\t * Fetches a list of documents from the collection.\n\t * \n\t * @param {Collection} collection A MongoDB Collection\n\t * @param {*} id A query. If it's an object, that's used directly. If it's a string, we'll try to turn it into a MongoDB style ID query object.\n\t *  If an array is passed, each element is assumed to be an id of the objects to fetch.\n\t * @param {function} callback (optional) A callback if that's how you get down. This function would normally be used with promises and await.\n\t * @returns A promise which resolves to an array of documents containing either one of zero items\n\t */\n\t_fetchById(collection, id, callback) {\n\t\treturn this._fetchByQuery(collection, this.createIdQuery(id), callback)\n\t}\n\t\n\n\t/**\n\t * EXTENDING CLASSES MUST IMPLEMENT THIS METHOD.\n\t * The internal implementation of saving objects, either insert or update. \n\t * @param {object} collection Could be anyting. An array, a mongo collection, even just a string to \n\t * identify what underlying datastore to use\n\t * @param {object} focus An object to save\n\t * @returns a promise which resolves to the result of the save, an array of the [result, change-type(update,create), native-result].\n\t */\n\tasync _doInternalSave(collection, focus) {\n\t\tthrow new Error('_doInternalSave not implemented')\n\t\t/*\n\t\t\t// Code will look something like this:\n\n\t\t\tlet p = new Promise((resolve, reject) => {\n\t\t\t\treturn resolve([focus, 'update', null])\n\t\t\t})\n\t\t\treturn p\n\t\t*/\n\t}\n\n\t/**\n\t * Saves an object. If it already has an _id attribute, it replaces the existing document, otherwise inserts it.\n\t * @param {Collection} collection A MongoDB Collection\n\t * @param {object} focus The object to save\n\t * @param {function} callback (optional) A callback if that's how you get down. This function would normally be used with promises and await.\n\t * @returns Promise\n\t */\n\tasync _save(collection, focus, callback) {\n\t\tlet p = new Promise((resolve, reject) => {\n\t\t\tif(this.useIndependentIds && !focus.id) {\n\t\t\t\tfocus.id = this.generateId()\n\t\t\t}\n\t\t\tthis._doInternalSave(collection, focus).then(([saved, saveType, nativeResult]) => {\n\t\t\t\tthis._notify(saved, saveType)\n\t\t\t\treturn resolve([saved, nativeResult])\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\treject(err)\n\t\t\t})\n\t\t})\n\t\treturn addCallbackToPromise(p, callback)\n\t}\n\n\t\n\t/**\n\t * Saves an array of objects. If the objects already have an _id attribute, it replaces the existing document, otherwise inserts it.\n\t * @param {Collection} collection A MongoDB Collection\n\t * @param {object[]} foci An array of objects to save\n\t * @param {function} callback (optional) A callback if that's how you get down. Called when Promise.all is done. This function would normally be used with promises and await.\n\t * @returns Array An array of promises which represent saves for each object in the array. If you want to wait on the results, try:\n\t * \t\tPromise.all(service._saveMany(col, items)).then(result => {\n\t * \t\t\t// some code\n\t * \t\t})\n\t * \tor\n\t * \t\tawait Promise.all(service._saveMany(col, items))\n\t */\n\t_saveMany(collection, foci, callback) {\n\t\tlet promises = []\n\t\tfor(let focus of foci) {\n\t\t\tpromises.push(this._save(collection, focus))\n\t\t}\t\n\t\tif(callback) {\n\t\t\taddCallbackToPromise(Promise.all(promises), callback)\n\t\t}\t\n\t\treturn promises\n\t}\n\t\n\t_notify(obj, type) {\n\t\tif(this.notification) {\n\t\t\tthis.notification.emit(this.eventName, obj, type)\n\t\t}\n\t}\n}\n\nmodule.exports = DataService","\nfunction filterGenerator(query) {\n\treturn function(item) {\n\t\tif(!query) {\n\t\t\treturn true\n\t\t}\n\t\tif(!item) {\n\t\t\treturn false\n\t\t}\n\t\tif(typeof query == 'string') {\n\t\t\treturn item._id == query || item.id == query\n\t\t}\n\t\treturn item._id == query._id || item.id == query.id\n\t}\n}\n\nexport default filterGenerator","import sift from 'sift'\nimport InMemoryDataService from './in-memory-data-service.mjs'\n\nexport default class SiftMemoryService extends InMemoryDataService {\n\tconstructor(options) {\n\t\tsuper(options)\n\n\t\tif (!options.filterGenerator) {\n\t\t\tthis.filterGenerator = sift\n\t\t}\n\t}\n\tasync _doInternalFetch(collection, query) {\n\t\tif(typeof query === 'string') {\n\t\t\t// Sometimes a simple id string will get all the way down here. We need to \n\t\t\t// make sure it's a query for sift\n\t\t\tquery = this.createIdQuery(query)\n\t\t}\n\t\t\n\t\treturn super._doInternalFetch(collection, query)\n\t}\n\n\t/**\n\t * Creates an object to query the db by an object's ID\n\t * @param {*} id \n\t * @returns \n\t */\n\tcreateIdQuery(id) {\n\t\tif (Array.isArray(id)) {\n\t\t\treturn id.map(this.createIdQuery)\n\t\t}\n\t\tif (typeof id === 'string') {\n\t\t\treturn {\n\t\t\t\t$or: [{\n\t\t\t\t\t_id: id\n\t\t\t\t}\n\t\t\t\t, {\n\t\t\t\t\tid: id\n\t\t\t\t}]\n\t\t\t}\n\t\t}\n\t\treturn id\n\t}\n\n}","\nimport DataService from '@dankolz/abstract-data-service/abstract-data-service.js'\nimport generateId from '@webhandle/id-generator'\nimport defaultFilterGenerator from './id-filter-generator.mjs'\n\n\nexport default class InMemoryDataService extends DataService {\n\t/**\n\t * \n\t * @param {object} options\n\t   * @param {string} [options.serviceName] Sets the name of this service for logging, and possibly other purposes\n\t   * @param {boolean} [options.useIndependentIds] If true, records will get unique ID strings which are not tied to the underylying datastore\n\t   * @param {object} options.collections an object holding the arrays this service will use, keyed by object storename\n\t   * @param {string} [options.collections.default] the default object store name. Technically optional, but the basic functions which\n\t * don't require the caller to specify the object store won't work if not set. For this DataService type these should be arrays.\n\t * @param {EventEmitter} [options.notification] An EventEmitter that will be notified on create, update, and delete. The notification is:\n\t * emit('object-change', { the object }, changeType: create, update, delete)\n\t * @param {string} [options.eventName] The event name which will be used for the emitter. By default this is 'object-change'.\n\t * @param {function} [options.filterGenerator] A function which is passed a query object and returns a function which can be use for\n\t * array.filter. Check out the npm package sift as an easy way to do this. If this is null, queries that are not\n\t * id queries will fail.\n\t * \n\t */\n\tconstructor(options) {\n\t\tsuper(options)\n\t\t\n\t\tif(!this.collections) {\n\t\t\tthis.collections = {\n\t\t\t\tdefault: []\n\t\t\t}\n\t\t}\n\t\tif(!this.collections.default) {\n\t\t\tthis.collections.default = []\n\t\t}\n\t\t\n\t\tif(!this.filterGenerator) {\n\t\t\tthis.filterGenerator = defaultFilterGenerator\n\t\t}\n\t}\n\t\n\tgenerateId() {\n\t\treturn generateId()\n\t}\n\n\t/**\n\t * Creates an object to query the db by an object's ID\n\t * @param {*} id \n\t * @returns \n\t */\n\tcreateIdQuery(id) {\n\t\t// We do NOT want to transform this into a more complex object because there's\n\t\t// no piece of code which knows how to interpret it.\n\t\treturn id\n\t}\n\n\tasync _doInternalFetch(collection, query) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tif(Array.isArray(query)) {\n\t\t\t\tlet result = []\n\t\t\t\ttry {\n\t\t\t\t\tfor(let subquery of query) {\n\t\t\t\t\t\tlet subresult = await this._doInternalFetch(collection, subquery)\n\t\t\t\t\t\tresult.push(...subresult)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch(e) {\n\t\t\t\t\treturn reject(e)\n\t\t\t\t}\n\t\t\t\treturn resolve(result)\n\t\t\t}\n\t\t\t\n\t\t\tif(!query || Object.keys(query).length == 0) {\n\t\t\t\treturn resolve([...collection])\n\t\t\t}\n\t\t\t\n\t\t\tlet filter = this.filterGenerator(query)\n\t\t\tlet result = collection.filter(filter)\n\t\t\tresolve(result)\n\t\t})\n\t}\n\n\tasync _doInternalSave(collection, focus) {\n\t\tlet p = new Promise(async (resolve, reject) => {\n\t\t\tlet type = 'update'\n\t\t\tif(!focus._id) {\n\t\t\t\tfocus._id = this.generateId()\n\t\t\t\ttype = 'create'\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait this._doInternalRemove(collection, focus._id)\n\t\t\t}\n\t\t\tcollection.push(focus)\n\t\t\treturn resolve([focus, type, null])\n\t\t})\n\t\treturn p\n\t}\n\n\tasync _doInternalRemove(collection, query) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tlet matchedRecords = await this._doInternalFetch(collection, query)\n\t\t\tfor(let found of matchedRecords) {\n\t\t\t\tfor(let i = 0; i < collection.length; i++) {\n\t\t\t\t\tif(collection[i]._id == found._id || collection[i].id == found.id) {\n\t\t\t\t\t\tcollection.splice(i, 1)\n\t\t\t\t\t\ti--\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tresolve(query)\n\t\t})\n\t}\n}\n","/**\n * Creates a comparator based on another comparator which has the opposite\n * sort order.\n * @param {function} comparator \n * @returns \n */\nfunction anti(comparator) {\n\treturn function(valueOne, valueTwo, cellOne, cellTwo) {\n\t\treturn -1 * comparator(valueOne, valueTwo, cellOne, cellTwo)\n\t}\n}\n\nmodule.exports = anti","function comparator(valueOne, valueTwo, cellOne, cellTwo) {\n\tvalueOne = valueOne.trim()\n\tvalueTwo = valueTwo.trim()\n\tif(valueOne == '' && valueTwo == '') {\n\t\treturn 0\n\t}\n\tif(valueOne == '') {\n\t\treturn -1\n\t}\n\tif(valueTwo == '') {\n\t\treturn 1\n\t}\n\treturn valueOne.toLowerCase().localeCompare(valueTwo.toLowerCase())\n}\n\nmodule.exports = comparator","const numberishOnly = require('./numberish-only')\n\nfunction comparator(valueOne, valueTwo, cellOne, cellTwo) {\n\tlet [one, two] = [valueOne, valueTwo].map(numberishOnly).map(parseFloat)\n\tif(Number.isNaN(one) && Number.isNaN(two)) {\n\t\treturn 0\n\t}\n\tif(Number.isNaN(one)) {\n\t\treturn -1\n\t}\n\tif(Number.isNaN(two)) {\n\t\treturn 1\n\t}\n\tif(one < two) {\n\t\treturn -1\n\t}\n\tif(one > two) {\n\t\treturn 1\n\t}\n\treturn 0\n}\nmodule.exports = comparator","const numberishOnly = require('./numberish-only')\n// const charactersOnly = require('./characters-only')\nconst firstCharactersOnly = require('./first-characters-only')\n\nfunction trim(val) {\n\treturn val.trim()\n}\n\nfunction comparator(valueOne, valueTwo, cellOne, cellTwo) {\n\tlet [one, two] = [valueOne, valueTwo].map(trim).map(firstCharactersOnly).map(trim)\n\tif(!one && two) {\n\t\treturn -1\n\t}\n\tif(one && !two) {\n\t\treturn 1\n\t}\n\t\n\tlet diff = one.toLowerCase().localeCompare(two.toLowerCase())\n\tif(diff != 0) {\n\t\treturn diff\n\t}\n\t\n\t[one, two] = [valueOne, valueTwo].map(numberishOnly).map(trim).map(parseFloat)\n\tif(Number.isNaN(one) && Number.isNaN(two)) {\n\t\treturn 0\n\t}\n\tif(Number.isNaN(one)) {\n\t\treturn -1\n\t}\n\tif(Number.isNaN(two)) {\n\t\treturn 1\n\t}\n\tif(one < two) {\n\t\treturn -1\n\t}\n\tif(one > two) {\n\t\treturn 1\n\t}\n\treturn 0\n}\nmodule.exports = comparator","function firstCharactersOnly(val) {\n\tif (val) {\n\t\tif(typeof val !== 'string') {\n\t\t\tval = val.toString()\n\t\t}\n\t\tlet match = val.match(/^[a-zA-Z]+/)\n\t\tif(!match) {\n\t\t\treturn ''\n\t\t}\n\t\treturn match[0]\n\t}\n\treturn ''\n}\n\nmodule.exports = firstCharactersOnly","function numberishOnly(val) {\n\tif (val) {\n\t\tif(typeof val !== 'string') {\n\t\t\tval = val.toString()\n\t\t}\n\t\treturn val.replace(/[^0123456789\\-.]/g, '')\n\t}\n\treturn ''\n}\n\nmodule.exports = numberishOnly","let comparatorDefault = require('./comparator-default')\nlet comparatorNumberish = require('./comparator-numberish')\nlet comparatorSku = require('./comparator-sku')\n\nconst anti = require('./anti')\n\nclass Tablesort {\n\tconstructor(tableElement, options = {}) {\n\t\tthis.tableElement = tableElement\n\t\tthis.options = Object.assign({}, options)\n\t\t\n\t\tthis.options.comparators = Object.assign({\n\t\t\tdefault: comparatorDefault\n\t\t\t, numberish: comparatorNumberish\n\t\t\t, sku: comparatorSku\n\t\t}, this.options.comparators)\n\t\t\n\t\tlet headers = tableElement.querySelectorAll('th:not(.no-sort)')\n\t\tfor(let header of headers) {\n\t\t\theader.addEventListener('click', this.headerClick.bind(this))\n\t\t}\n\t}\n\t\n\theaderClick(evt) {\n\t\tlet header = evt.currentTarget\n\t\tlet position = Array.from(header.parentNode.children).indexOf(header)\n\t\tlet reverse = header.getAttribute('aria-sort') == 'forward' ? true : false\n\t\tthis.tableElement.querySelectorAll('th').forEach(cell => cell.removeAttribute('aria-sort'))\n\t\theader.setAttribute('aria-sort', reverse ? 'reverse' : 'forward')\n\t\t\n\n\t\tlet comparatorName = header.getAttribute('data-comparator') || 'default'\n\t\tlet comparator = this.options.comparators[comparatorName] || this.options.comparators.default\n\t\tif(reverse) {\n\t\t\tcomparator = anti(comparator)\n\t\t}\n\n\t\tthis.sort(position, comparator)\n\t}\n\t\n\tsort(position, comparator = this.options.comparators.default) {\n\t\tlet tbody = this.tableElement.querySelector('tbody')\n\t\tlet rows = Array.from(tbody.querySelectorAll('tr'))\n\t\trows.sort((one, two) => {\n\t\t\tlet cellOne = one.children[position]\n\t\t\tlet cellTwo = two.children[position]\n\n\t\t\treturn comparator(cellOne.innerText, cellTwo.innerText, cellOne, cellTwo)\n\t\t})\n\t\tfor(let row of rows) {\n\t\t\ttbody.appendChild(row)\n\t\t}\n\t}\n\t\n\n\n}\n\nmodule.exports = Tablesort","export default function eventEntryMapper([key, value]) {\n\tkey = key.trim()\n\tlet parts = key.split(' ')\n\tlet event = parts.shift().trim()\n\tlet selector = parts.join(' ').trim()\n\t\n\tif(typeof value === 'string') {\n\t\tvalue = value.trim()\n\t}\t\n\t\n\treturn {\n\t\tevent: event,\n\t\tselector: selector,\n\t\thandler: value\n\t}\n}","export default function extractEventNames(eventTriggers) {\n\tlet eventNames = Array.from(eventTriggers.reduce((acc, trigger) => {\n\t\tacc.add(trigger.event)\n\t\treturn acc\n\t}, new Set()))\n\treturn eventNames\n}","/**\n * Generates a random string id in the browser. Will probably not work\n * on the server.\n * @returns A base64 web url safe string\n */\nexport default function generateId() {\n\tlet array = new Uint8Array(32)\n\twindow.crypto.getRandomValues(array)\n\tlet value = btoa(array)\n\tvalue = value.replace(/\\//g, \"_\").replace(/\\+/g, \"-\").replace(/=+$/, \"\")\n\treturn value\n}","\nimport {View} from \"./view.js\"\nexport {\n\tView\n}","import generateId from \"./generate-id.js\"\n// import pick from \"./pick.js\"\nimport eventEntryMapper from \"./event-entry-mapper.js\"\nimport extractEventNames from \"./extract-event-names.js\"\n\nlet defaultOptions = {\n\t// The default `tagName` of a View's element is `\"div\"`.\n\ttagName: 'div'\n\t\n\t, events: {}\n\n}\nlet viewOptions = ['model', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n/**\n * A way to connect data to be displayed, a way to display it, and an organization\n * of functions to handle events.\n */\nexport class View {\n\tconstructor(options) {\n\t\tthis.id = generateId()\n\t\tObject.assign(this, defaultOptions)\n\t\tthis.preinitialize.apply(this, arguments);\n\t\tObject.assign(this, options)\n\t\tthis._ensureElement()\n\t\tthis.initialize.apply(this, arguments);\n\t}\n\n\n\t/**\n\t * preinitialize is an empty function by default. You can override it with a function\n\t * or object.  preinitialize will run before any instantiation logic is run in the View\n\t */\n\tpreinitialize() { }\n\n\t/**\n\t * Initialize is an empty function by default. Override it with your own\n\t * initialization logic.\n\t */\n\tinitialize() { }\n\n\t/**\n\t * **render** is the core function that your view should override, in order\n\t * to populate its element (`this.el`), with the appropriate HTML. The\n\t * convention is for **render** to always return `this`.\n\t * @returns this\n\t */\n\trender() {\n\t\treturn this\n\t}\n\t\n\t/**\n\t * Removes the element from the dom. Does not disable event listeners\n\t */\n\tremove() {\n\t\tthis.el.parentElement.removeChild(this.el)\n\t}\n\t\n\t/**\n\t * Adds this view as a child to a containing element. Nothing special is going on here.\n\t * This is just a shortcut for container.appendChild\n\t * @param {Element} container \n\t */\n\tappendTo(container) {\n\t\tcontainer.appendChild(this.el)\n\t}\n\n\t/**\n\t * Clears the contents of the container and adds this view.\n\t * @param {Element} container \n\t */\n\treplaceContentsOf(container) {\n\t\tcontainer.innerHTML = ''\n\t\tthis.appendTo(container)\n\t}\n\n\t/**\n\t * Set the element for this view, and if new, adds listeners to it in accordance\n\t * with the \"events\" member.\n\t * @param {Element} el The dom element which will be the root of this view\n\t * @returns this\n\t */\n\tsetElement(el) {\n\t\tif (this.el !== el) {\n\t\t\tthis.el = el\n\t\t\tthis._addListeners()\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Produces a DOM element to be assigned to your view. Exposed for\n\t * subclasses using an alternative DOM manipulation API.\n\t * @param {string} name The element tag name\n\t * @returns The dom element\n\t */\n\t_createElement(name) {\n\t\tlet el = document.createElement(name)\n\t\tel.setAttribute('id', this.id)\n\t\tel.view = this\n\t\treturn el\n\t}\n\n\t/**\n\t * Ensures that the element exists. Applies attributes and className\n\t * to it regardless\n\t */\n\t_ensureElement() {\n\t\tif (!this.el) {\n\t\t\tthis.setElement(this._createElement(this.tagName))\n\t\t}\n\t\telse {\n\t\t\tthis._addListeners()\n\t\t}\n\t\tthis._setAttributes()\n\t\tif (this.className) {\n\t\t\tthis.el.classList.add(this.className)\n\t\t}\n\t}\n\n\t/**\n\t * Set attributes from a hash on this view's element.  Exposed for\n\t * subclasses using an alternative DOM manipulation API.\n\t * @param {object} attributes \n\t */\n\t_setAttributes(attributes) {\n\t\tif (this.attributes) {\n\t\t\tfor (let [key, value] of Object.entries(this.attributes)) {\n\t\t\t\tthis.el.setAttribute(key, value)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * Set callbacks, where `this.events` is a hash of\n\t * *{\"event selector\": \"callback\"}*\n\t *\n\t *    {\n\t *       'mousedown .title':  'edit',\n\t *       'click .button':     'save',\n\t *       'click .open':       function(e) { ... },\n\t *       'keydown .':     \t  'handleKey'\n\t *    }\n\t * pairs. Callbacks will be bound to the view, with `this` set properly.\n\t * \n\t * \n\t * Note that the selector `.` will match the root element and can be used\n\t * as a final chance to handle events or for events like an escape key\n\t * which are essentially global to the widget.\n\t * \n\t */\n\t_addListeners() {\n\t\tthis.eventTriggers = Object.entries(this.events).map(eventEntryMapper)\n\t\tlet eventNames = extractEventNames(this.eventTriggers)\t\t\n\n\t\tfor(let eventName of eventNames) {\n\t\t\tthis.el.addEventListener(eventName, this._eventHandler.bind(this))\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the elements from the view which match the selector\n\t * @param {string} selector A css selector. `.` will select the root element\n\t * @returns An array of elements\n\t */\n\t_getCandidates(selector) {\n\t\tif(selector === '.') {\n\t\t\treturn [this.el]\n\t\t}\n\t\treturn Array.from(this.el.querySelectorAll(selector))\n\t}\n\t\n\t/**\n\t * Handles all events for all elements within the view. It attempts to find a\n\t * trigger matching the event and then process it. It will match and invoke\n\t * only one trigger.\n\t * @param {Event} evt \n\t */\n\t_eventHandler(evt) {\n\t\tfor(let trigger of this.eventTriggers) {\n\t\t\tif(evt.type == trigger.event) {\n\t\t\t\tlet candidates = this._getCandidates(trigger.selector)\n\t\t\t\tlet found = null\n\t\t\t\tfor(let candidate of candidates) {\n\t\t\t\t\tif(candidate === evt.target || candidate.contains(evt.target)) {\n\t\t\t\t\t\tfound = candidate\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(found) {\n\t\t\t\t\tif(typeof trigger.handler === 'string') {\n\t\t\t\t\t\tthis[trigger.handler].call(this, evt, found)\n\t\t\t\t\t}\t\n\t\t\t\t\telse if(typeof trigger.handler === 'function') {\n\t\t\t\t\t\ttrigger.handler.call(this, evt, found)\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","\nexport default class DataItemWorker {\n\n\tasync getFileFromEntry(entry) {\n\t\tlet p = new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tif (entry.file) {\n\t\t\t\t\tentry.file(file => {\n\t\t\t\t\t\tfile.entry = entry\n\t\t\t\t\t\tresolve(file)\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error(err)\n\t\t\t\t\t\tresolve(null)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresolve(null)\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t\tresolve(null)\n\t\t\t}\n\t\t})\n\t\treturn p\n\t}\n\n\tasync readDirectoryEntries(entry) {\n\t\tlet p = new Promise((resolve, reject) => {\n\t\t\tlet dirReader = entry.createReader()\n\t\t\tlet result = []\n\t\t\tlet readThem = () => {\n\t\t\t\tdirReader.readEntries(async (entries) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif(entries && entries.length > 0) {\n\t\t\t\t\t\t\tfor (let entry of entries) {\n\t\t\t\t\t\t\t\tresult.push(entry)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treadThem()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tresolve(result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\tconsole.error(e)\n\t\t\t\t\t\tresolve(result)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\treadThem()\n\t\t})\n\t\treturn p\n\t}\n\n\t/**\n\t * \n\t * Takes a list of DataTransferItems and resolves them to FileEntry objects.\n\t * \n\t * Note, you can get a real File object by calling `getFileFromEntry`\n\t * @param {array[DataTransferItem|File|FileEntry|DirectoryEntry]} entries \n\t * @param {*} [options]\n\t * @returns \n\t */\n\tasync expandEntries(entries, options) {\n\t\toptions = Object.assign({\n\t\t\tkeepDirectories: false\n\t\t\t, recursive: true\n\t\t}, options)\n\t\tlet expanded = []\n\t\tlet target = [...entries]\t\n\t\t\n\t\twhile(target.length > 0) {\n\t\t\t\n\t\t\t// You MUST process all of the DataTransferItems first. If you do a directory read\n\t\t\t// it will blank out the information on those items.\n\t\t\tlet item = target.shift()\n\t\t\t\n\t\t\tif(item instanceof File) {\n\t\t\t\texpanded.push(item)\n\t\t\t}\n\t\t\telse if(item.isFile === true && item.isDirectory === false) {\n\t\t\t\texpanded.push(item)\n\t\t\t}\n\t\t\telse if(item.isFile === false && item.isDirectory === true) {\n\t\t\t\tlet dirEntries = await this.readDirectoryEntries(item)\n\t\t\t\tif(options.recursive) {\n\t\t\t\t\ttarget.push(...dirEntries)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!options.keepDirectories) {\n\t\t\t\t\t\tdirEntries = dirEntries.filter(item => item.isFile)\n\t\t\t\t\t}\n\t\t\t\t\texpanded.push(...dirEntries)\n\t\t\t\t}\n\t\t\t\tif(options.keepDirectories) {\n\t\t\t\t\texpanded.push(item)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (item.kind === \"file\") {\n\t\t\t\tif (item.webkitGetAsEntry) {\n\t\t\t\t\tlet entry = item.webkitGetAsEntry()\n\t\t\t\t\tif (entry) {\n\t\t\t\t\t\ttarget.push(entry)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(item.getAsFile) {\n\t\t\t\t\ttarget.push(item.getAsFile())\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\texpanded = expanded.filter(item => !!item)\n\t\treturn expanded\n\t}\n\n\t/**\n\t * A utility function to extract the file entries from a file drop event.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tasync getFileEntriesFromEvent(evt, options) {\n\t\tlet entries = []\n\t\t// items is the new interface we should use if that's available\n\t\tif (evt.dataTransfer.items) {\n\t\t\tentries.push(...evt.dataTransfer.items)\n\t\t} \n\t\telse if(evt.dataTransfer.files) {\n\t\t\tentries.push(...evt.dataTransfer.files)\n\t\t}\n\t\tlet result = await this.expandEntries(entries, options)\n\t\treturn result.filter(item => !!item)\n\t}\n\n\n}","import { View } from '@webhandle/backbone-view'\nimport Emitter from '@webhandle/minimal-browser-event-emitter'\nimport DataItemWorker from './data-item-worker.mjs'\n\nlet dataItemWorker = new DataItemWorker()\n\nexport default class ListView extends View {\n\n\t/**\n\t * Setup the event listners and default objects.\n\t * @param {Object} options \n\t */\n\tpreinitialize(options = {}) {\n\t\tthis.desktopHandleSelector = options.desktopHandleSelector\n\t\tthis.mobileHandleSelector = options.mobileHandleSelector || '.handle'\n\t\tthis.events = Object.assign({}, {\n\t\t\t'drop .': 'handleDrop'\n\t\t\t, 'dragend .': 'handleDragEnd'\n\t\t\t, 'dragleave .': 'handleDragLeave'\n\t\t\t, 'dragover .': 'handleDragover'\n\t\t\t, 'dragenter .': 'dragEnter'\n\t\t\t, 'dragover *': 'dragEnterCell'\n\t\t\t, 'dragstart *': 'dragStart'\n\t\t\t, ['touchstart ' + this.mobileHandleSelector]: 'touchDrag'\n\t\t\t, ['touchmove ' + this.mobileHandleSelector]: 'touchMove'\n\t\t\t, ['touchend ' + this.mobileHandleSelector]: 'touchEnd'\n\t\t\t, ['touchcancel ' + this.mobileHandleSelector]: 'touchCancel'\n\t\t}, options.events)\n\t\tthis.placeholderName = options.placeholderName || 'New Item'\n\t\toptions.events = this.events\n\t\tif (!this.emitter) {\n\t\t\tthis.emitter = new Emitter()\n\t\t}\n\t\tthis.overscrollCaptures = {}\n\t}\n\n\t/**\n\t * Returns true if a file is being dragged into the list.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tisFileTypeDrag(evt) {\n\t\tif (evt.dataTransfer && evt.dataTransfer.item && evt.dataTransfer.item.length > 0) {\n\t\t\tif (evt.dataTransfer.items[0].kind === 'file') {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\tif (evt.dataTransfer && evt.dataTransfer.types) {\n\t\t\tfor (let type of evt.dataTransfer.types) {\n\t\t\t\tif (type.toLowerCase() == 'files') {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false\n\t}\n\n\t/**\n\t * Looks to see if there's a resource label and we should therefore consider this an\n\t * external resource object that's being dragged into the list.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tisResourceTypeDrag(evt) {\n\t\treturn !!this.extractLabel(evt)\n\t}\n\n\t/**\n\t * Watches for entry of dragging into a cell so we can tell of the user is still\n\t * performing a drag operation.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\tdragEnterCell(evt, selected) {\n\t\tthis.canCancel = false\n\t}\n\n\t/**\n\t * Watch for the end of dragging for one of the existing cells. This is the cleanup\n\t * for the case where a user is dragging and then presses escape.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDragEnd(evt, selected) {\n\t\tthis.cleanupDrag()\n\t}\n\n\t/**\n\t * Watches for the mouse leaving the list area. The spec has no good way to tell if the user\n\t * has stopped dragging within our control area, so here we're doing a little dance to watch\n\t * when the user leaves any of the top level elements and then perform a cancel if we don't\n\t * see another drag event within a few milliseconds.\n\t * \n\t * This does sometimes lead to false positives, but that's generally okay since the code just\n\t * interprets the next drag event as if the user just started their drag, so it recovers \n\t * fairly well.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDragLeave(evt, selected) {\n\t\tif (this.externalDrag) {\n\t\t\tif (evt.target == this.el || this.getCells().includes(evt.target)) {\n\t\t\t\t// so we're leaving the whole list. If we don't immediately enter someplace else\n\t\t\t\t// then we should interpret this as a cancel\n\t\t\t\t// In this case, \"the whole list\" is one of the cells or the container\n\t\t\t\tthis.canCancel = true\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (this.canCancel) {\n\t\t\t\t\t\tthis.cleanupDrag()\n\t\t\t\t\t}\n\t\t\t\t}, 20)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if this is a type of object from outside the list that can be added\n\t * to the list. By default it allows files and uri-list types. To turn off the abilty\n\t * to drag other items into the list, just override to return false.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tshouldInsertCellForExternalDrag(evt) {\n\t\treturn this.isFileTypeDrag(evt) || this.isResourceTypeDrag(evt)\n\t}\n\n\n\t/**\n\t * This is the mobile/touch equivalent of dragStart\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\ttouchDrag(evt, selected) {\n\t\tthis.captureOverscroll('html')\n\t\tthis.captureOverscroll('body')\n\t\tthis.dragStart(evt, selected)\n\t}\n\n\t/**\n\t * Handle the user touch dragging an item.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\ttouchMove(evt, selected) {\n\t\tlet top = this.boxTop()\n\t\tlet pos = Math.max(0, evt.touches[0].pageY) - top\n\t\tthis.positionOnDrag(pos)\n\t}\n\n\t/**\n\t * This is essentially a mobile/touch drop\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\ttouchEnd(evt, selected) {\n\t\tthis.handleDrop(evt, selected)\n\t}\n\n\t/**\n\t * Cleanup after a mobile drag\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\ttouchCancel(evt, selected) {\n\t\tthis.cleanupDrag()\n\t}\n\n\t/**\n\t * Listens for the element being dragged. The spec seems to indicate that this is\n\t * fired on mobile as well, but in practice is seems to only get fired on \n\t * desktop.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\tdragStart(evt, selected) {\n\t\tthis.dragging = this.getCellFromChild(selected)\n\t\tthis.dragging.classList.add('dragging')\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.setDragImage(document.createElement('div'), 0, 0)\n\t\t}\n\t}\n\n\t/**\n\t * Extracts a placeholder label from the data transfer types. The label name is\n\t * part of the type name. So, a type of `data:text/label,awesome` would indicate\n\t * that the placeholder is supposed to be `awesome`.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\textractLabel(evt) {\n\t\tlet labelPrefix = 'data:text/label,'\n\t\tfor (let type of evt.dataTransfer.types) {\n\t\t\tif (type.indexOf(labelPrefix) == 0) {\n\t\t\t\treturn type.substring(labelPrefix.length)\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n\n\t/**\n\t * Restores the elements previous overscroll behavior (see captureOverscroll for why we need\n\t * this)\n\t * @param {string} elName \n\t */\n\trestoreOverscroll(elName) {\n\t\tif (elName in this.overscrollCaptures) {\n\t\t\tdocument.querySelector(elName).style['overscroll-behavior'] = this.overscrollCaptures[elName]\n\t\t\tdelete this.overscrollCaptures[elName]\n\t\t}\n\t}\n\n\t/**\n\t * Used for mobile to get the present value of what happens when the user drags their finger\n\t * farther than the screen can scroll. By default what happens is a page reload. That won't \n\t * be what we want if a user is dragging a list item, so we have to capture that behavior and\n\t * change it so that nothing happens to the page.\n\t * @param {string} elName \n\t */\n\tcaptureOverscroll(elName) {\n\t\tlet el = document.querySelector(elName)\n\t\tthis.overscrollCaptures[elName] = el.style['overscroll-behavior']\n\t\tel.style['overscroll-behavior'] = 'none'\n\t}\n\n\t/**\n\t * Utility function to create a dom node based on html\n\t * @param {string} html \n\t * @returns \n\t */\n\t_makeElementFromHTML(html) {\n\t\tlet div = document.createElement('div')\n\t\tdiv.innerHTML = html\n\t\tlet child = div.children[0]\n\t\treturn child\n\t}\n\n\n\t/**\n\t * Creates markup for the external drag event placeholder cell. Attempts\n\t * to determine a reasonable label.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tcreateExternalDragPlaceholderHTML(evt) {\n\t\tlet placeholder = this.extractLabel(evt) || this.placeholderName\n\t\tlet html = `<div class=\"cell\">\n\t\t\t<span class=\"handle\">↕</span>\n\t\t\t${placeholder}\n\t\t</div>`\n\t\treturn html\n\n\t}\n\n\t/**\n\t * Creates a placeholder cell for a drag event where the source is an\n\t * external object like a file or something else on the page.\n\t * @param {Event} evt \n\t */\n\tcreateExternalDragPlaceholderCell(evt) {\n\t\tlet html = this.createExternalDragPlaceholderHTML(evt)\n\t\tlet cell = this._makeElementFromHTML(html)\n\t\tcell.setAttribute('draggable', true)\n\t\tthis.addCell(cell)\n\t\tthis.dragStart(evt, cell)\n\t}\n\n\tdragEnter(evt, selected) {\n\t\tif (!this.dragging && this.shouldInsertCellForExternalDrag(evt)) {\n\t\t\t// If we're not already doing a drag operation, we need to start one\n\t\t\t// We create a placeholder for this event and then move it up and down\n\t\t\t// like a pre-existing cell. \n\t\t\t// NOTE: We do not have much information about the contents of the\n\t\t\t// drag until the drop event occurs. This placeholder may have to be\n\t\t\t// somewhat generic.\n\t\t\tthis.externalDrag = true\n\t\t\tthis.createExternalDragPlaceholderCell(evt)\n\t\t}\n\t}\n\n\t/**\n\t * Watch for movement of something being dragged\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDragover(evt, selected) {\n\t\tevt.preventDefault()\n\t\tthis.canCancel = false\n\t\tlet top = this.boxTop()\n\t\tlet pos = evt.y - top\n\n\t\tif (this.dragging) {\n\t\t\tif (evt.dataTransfer) {\n\t\t\t\tevt.dataTransfer.dropEffect = 'move'\n\t\t\t}\n\t\t\tthis.positionOnDrag(pos)\n\t\t}\n\t\telse {\n\t\t\tif (evt.dataTransfer) {\n\t\t\t\tevt.dataTransfer.dropEffect = 'copy'\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates permanent cells for files dropped into the list\n\t * @param {array[FileEntry|File]} files \n\t * @returns an array of Elements\n\t */\n\tcreateCellsForFiles(files) {\n\t\tlet cells = files.map(file => {\n\t\t\tlet html = `<div class=\"cell\">\n\t\t\t\t<span class=\"handle\">↕</span>\n\t\t\t\t${file.name}\n\t\t\t</div>`\n\t\t\tlet el = this._makeElementFromHTML(html)\n\t\t\tel.data = file\n\t\t\treturn el\n\t\t})\n\t\treturn cells\n\t}\n\n\t/**\n\t * Creates permanent cells for resource objects dropped into the list\n\t * @param {array[string]} uriList \n\t * @returns an array of Elements\n\t */\n\tcreateCellsForUriList(uriList) {\n\t\tif (!Array.isArray(uriList)) {\n\t\t\turiList = [uriList]\n\t\t}\n\t\tlet cells = uriList.map(uri => {\n\t\t\tlet html = `<div class=\"cell\">\n\t\t\t\t<span class=\"handle\">↕</span>\n\t\t\t\t${uri}\n\t\t\t</div>`\n\t\t\tlet el = this._makeElementFromHTML(html)\n\t\t\tel.data = uri\n\t\t\treturn el\n\t\t})\n\t\treturn cells\n\t}\n\n\t/**\n\t * Creates permanent cells for drops of unknown types.\n\t * @param {Event} evt \n\t * @returns An array of elements\n\t */\n\tcreateCellsForUnknownType(evt) {\n\t\treturn []\n\t}\n\t\n\tisExternalDrop(evt) {\n\t\tlet uriList\n\t\tif (evt.dataTransfer) {\n\t\t\turiList = evt.dataTransfer.getData('text/uri-list')\n\t\t}\n\n\t\tif (this.externalDrag || uriList) {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\t\n\tasync getFilesEntries(evt) {\n\t\tlet files = await dataItemWorker.getFileEntriesFromEvent(evt, {\n\t\t\tkeepDirectories: false\n\t\t\t, recursive: true\n\t\t})\n\t\treturn files\n\t}\n\n\t/**\n\t * Creates permanent cells for external items dropped into the list,\n\t * emits events, and does cleaup\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDrop(evt, selected) {\n\t\tevt.preventDefault()\n\t\t\n\t\t// Sometimes the placeholder gets cleaned up before the insertion of the new nodes\n\t\t// happens. Let's capture the following element just in case we need it.\n\t\tlet afterDragElement\n\t\tif(this.dragging) {\n\t\t\tafterDragElement = this.dragging.nextElementSibling\n\t\t}\n\n\t\tlet p = new Promise(async (resolve, reject) => {\n\t\t\tif (this.isExternalDrop(evt)) {\n\t\t\t\t// if a link is dropped, there's no exteralDrag object, just a drop object\n\t\t\t\tlet uriList\n\t\t\t\tif (evt.dataTransfer) {\n\t\t\t\t\turiList = evt.dataTransfer.getData('text/uri-list')\n\t\t\t\t}\n\n\t\t\t\tlet changes = []\n\t\t\t\tlet files = await this.getFilesEntries(evt)\n\t\t\t\tlet cells = []\n\t\t\t\tif (files && files.length > 0) {\n\t\t\t\t\tcells = this.createCellsForFiles(files)\n\t\t\t\t\tfor (let count = 0; count < cells.length; count++) {\n\t\t\t\t\t\tlet cell = cells[count]\n\t\t\t\t\t\tif (!cell.file) {\n\t\t\t\t\t\t\tcell.file = files[count]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (uriList) {\n\t\t\t\t\tif (typeof uriList == 'string') {\n\t\t\t\t\t\t// Acording to the spec, this should be a list with one uri on every line\n\t\t\t\t\t\t// In practice, it seems like the browser is eating the return characters\n\t\t\t\t\t\t// In my tests, I'm passing multiple uris as comma separated. I'm handling\n\t\t\t\t\t\t// both cases here.\n\t\t\t\t\t\tlet parts = [uriList]\n\t\t\t\t\t\tfor (let sep of ['\\r\\n', '\\n', ',']) {\n\t\t\t\t\t\t\tlet newParts = []\n\t\t\t\t\t\t\tfor (let part of parts) {\n\t\t\t\t\t\t\t\tnewParts.push(...part.split(sep))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparts = newParts\n\t\t\t\t\t\t}\n\t\t\t\t\t\turiList = parts\n\t\t\t\t\t}\n\t\t\t\t\tcells = this.createCellsForUriList(uriList)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcells = this.createCellsForUnknownType(evt)\n\t\t\t\t}\n\n\t\t\t\tfor (let cell of cells) {\n\t\t\t\t\tcell.setAttribute('draggable', true)\n\t\t\t\t\tthis.addCell(cell, {\n\t\t\t\t\t\tbefore: this.dragging || afterDragElement\n\t\t\t\t\t})\n\t\t\t\t\tchanges.push({\n\t\t\t\t\t\tcell: cell\n\t\t\t\t\t\t, file: cell.file\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (this.dragging) {\n\t\t\t\t\tthis.dragging.remove()\n\t\t\t\t}\n\t\t\t\tthis.emitter.emit('list-change', {\n\t\t\t\t\ttype: 'drop'\n\t\t\t\t\t, cells: cells\n\t\t\t\t\t, files: files\n\t\t\t\t\t, changes: changes\n\t\t\t\t\t, event: evt\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.emitter.emit('list-change', {\n\t\t\t\t\ttype: 'reorder'\n\t\t\t\t\t, cells: [this.dragging]\n\t\t\t\t})\n\t\t\t}\n\n\t\t})\n\t\tthis.cleanupDrag()\n\t\treturn p\n\t}\n\n\t/**\n\t * Adds a new item to the list, last item by default \n\t * @param {string|Element} cell The item to add \n\t * @param {*} [options]\n\t * @param {boolean} options.first If true inserted at the start of the list\n\t * @param {boolean} options.last If true inserted at the end of the list\n\t * @param {Element} options.after Insert after this item \n\t * @param {Element} options.before Insert before this item\n\t * @param {*} options.data Data to be set on the element\n\t */\n\taddCell(cell, options = {}) {\n\t\tif (typeof cell === 'string') {\n\t\t\tcell = this._makeElementFromHTML(cell)\n\t\t}\n\n\t\tif (options.data) {\n\t\t\tcell.data = options.data\n\t\t}\n\n\t\tif (options.first) {\n\t\t\tthis.el.insertAdjacentElement('afterbegin', cell)\n\t\t}\n\t\telse if (options.before) {\n\t\t\tthis.el.insertBefore(cell, options.before)\n\t\t}\n\t\telse if (options.after) {\n\t\t\toptions.after.after(cell)\n\t\t}\n\t\telse {\n\t\t\tthis.el.insertAdjacentElement('beforeend', cell)\n\t\t}\n\t\treturn cell\n\t}\n\n\t/**\n\t * \n\t * @param {int} pos position of pointer relative to the top of the box\n\t */\n\tpositionOnDrag(pos) {\n\t\tlet over = this.findOver(pos)\n\t\tthis.addCell(this.dragging, {\n\t\t\tbefore: over\n\t\t})\n\t}\n\n\t/**\n\t * Gets the top level objects of the list.\n\t * @returns \n\t */\n\tgetCells() {\n\t\treturn [...this.el.children]\n\t}\n\n\t/**\n\t * Cleanup after a drag event by deleting any placeholder objects\n\t * and restoring the browser to its pre-drag settings\n\t */\n\tcleanupDrag() {\n\t\tif (this.dragging && this.externalDrag) {\n\t\t\tthis.dragging.remove()\n\t\t}\n\n\t\tdelete this.dragging\n\t\tdelete this.externalDrag\n\t\tthis.getCells().forEach(cell => {\n\t\t\tcell.classList.remove('dragging')\n\t\t})\n\t\tthis.restoreOverscroll('html')\n\t\tthis.restoreOverscroll('body')\n\t}\n\n\t/**\n\t * Determine which cell the pointer/finger is currently over.\n\t * @param {Object} pos \n\t * @returns \n\t */\n\tfindOver(pos) {\n\t\tlet locations = this.findLocations()\n\t\tfor (let loc of locations) {\n\t\t\tif (pos >= loc.top && pos <= loc.bottom) {\n\t\t\t\treturn loc.cell\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the top of the list box\n\t * @returns \n\t */\n\tboxTop() {\n\t\tlet boxRect = this.el.getBoundingClientRect()\n\t\tlet top = boxRect.top\n\t\treturn top\n\t}\n\n\n\t/**\n\t * Sets up the cells to be draggable and makes the mobile touch handles ready for drag.\n\t */\n\trender() {\n\t\tif (this.desktopHandleSelector) {\n\t\t\tthis.el.querySelectorAll(this.desktopHandleSelector).forEach(handle => {\n\t\t\t\thandle.setAttribute(\"draggable\", true)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.getCells().forEach(cell => {\n\t\t\t\tcell.setAttribute(\"draggable\", true)\n\t\t\t})\n\t\t}\n\t\tif (this.mobileHandleSelector) {\n\t\t\tthis.el.querySelectorAll(this.mobileHandleSelector).forEach(handle => {\n\t\t\t\thandle.style['touch-action'] = 'none'\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * @returns The relative locations of the cells in the list\n\t */\n\tfindLocations() {\n\t\tlet top = this.boxTop()\n\n\t\tlet locations = []\n\t\tthis.getCells().forEach(cell => {\n\t\t\tlet rect = cell.getBoundingClientRect()\n\t\t\tlocations.push({\n\t\t\t\ttop: rect.top - top\n\t\t\t\t, bottom: rect.bottom - top\n\t\t\t\t, cell: cell\n\t\t\t})\n\t\t})\n\t\treturn locations\n\t}\n\n\t/**\n\t * Give a node for the cell or a descendent of a cell, returns the node\n\t * for the cell.\n\t * @param {Node} child \n\t * @returns \n\t */\n\tgetCellFromChild(child) {\n\t\tif (child.parentElement == this.el) {\n\t\t\treturn child\n\t\t}\n\t\tif (!child) {\n\t\t\treturn null\n\t\t}\n\t\treturn this.getCellFromChild(child.parentElement)\n\t}\n}\n\n\n","import Dialog from 'ei-dialog'\nimport formValueInjector from 'form-value-injector'\nimport gatherFormData from '@webhandle/gather-form-data'\n\n\nexport default class FormAnswerDialog extends Dialog {\n\t/**\n\t * \n\t * @param {Object} options Properties to create the dialog box. In addition to the properties from Dialog\n\t * there those below.\n\t * @param {Object} options.data The data which will be used to populate the controls in the dialog\n\t */\n\tconstructor(options) {\n\t\tsuper(Object.assign({}, options,\n\t\t\t{\n\t\t\t\ton: {\n\t\t\t\t\t'.btn-ok': () => {\n\t\t\t\t\t\tthis.resolve(this.gatherData())\n\t\t\t\t\t\treturn true\n\t\t\t\t\t},\n\t\t\t\t\t'.mask': () => {\n\t\t\t\t\t\tthis.resolve()\n\t\t\t\t\t\treturn true\n\t\t\t\t\t},\n\t\t\t\t\t'.btn-cancel': () => {\n\t\t\t\t\t\tthis.resolve()\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t))\n\t\tif (this.afterOpen) {\n\t\t\tthis.afterOpenOriginal = this.afterOpen\n\t\t}\n\t\tthis.afterOpen = function (bodyElement, self) {\n\t\t\tif (this.data) {\n\t\t\t\tbodyElement.innerHTML = formValueInjector(bodyElement.innerHTML, this.data)\n\t\t\t}\n\t\t\tlet firstInput = bodyElement.querySelector('input, textarea')\n\t\t\tif (firstInput) {\n\t\t\t\tfirstInput.focus()\n\t\t\t}\n\n\t\t\tif (this.afterOpenOriginal) {\n\t\t\t\tthis.afterOpenOriginal(bodyElement, self)\n\t\t\t}\n\t\t}\n\t}\n\tgatherData() {\n\t\tlet dialogBody = document.querySelector(this.getBodySelector())\n\t\treturn gatherFormData(dialogBody)\n\t}\n\n\tasync open() {\n\t\tthis.promise = new Promise((resolve, reject) => {\n\t\t\tthis.resolve = resolve\n\t\t\tthis.reject = reject\n\t\t})\n\t\tsuper.open()\n\n\t\treturn this.promise\n\t}\n\n}","/**\n * Gathers the data from the form controls.\n * @param {HTMLElement} formBody The html element containing the controls. Probably\n * a form tag element, but it really doesn't matter.\n */\nexport default function gatherFormData(formBody) {\n\tlet result = {}\n\tlet controls = formBody.querySelectorAll('input, textarea, select')\n\tfor (let control of controls) {\n\t\tif (control.type === 'checkbox') {\n\t\t\tif (!control.checked) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\telse if (control.type === 'radio') {\n\t\t\tif (!control.checked) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\tresult[control.getAttribute('name')] = control.value\n\t}\n\treturn result\n}\n\n","\nexport default function generateId() {\n\tlet array = new Uint8Array(32)\n\twindow.crypto.getRandomValues(array)\n\tlet value = btoa(array)\n\tvalue = value.replace(/\\//g, \"_\").replace(/\\+/g, \"-\").replace(/=+$/, \"\")\n\treturn value\n}","import Streamish from \"./streamish.mjs\"\n\n/**\n * Add this most basic of the EventEmitter functions (on, emit, removeListener) to the browser's\n * EventTarget functionality.\n * \n * The eventEmitter.emit() method allows an arbitrary set of arguments to be passed to the listener \n * functions. Keep in mind that when an ordinary listener function is called, the standard this \n * keyword is intentionally set to reference the EventEmitter instance to which the listener is attached.\n */\nlet base = typeof EventTarget === 'undefined' ? Streamish : EventTarget\nexport default class EventEmitter extends base {\n\tconstructor(target) {\n\t\tsuper(target)\n\t\tif(target) {\n\t\t\tthis.innerEventTarget = target\n\t\t}\n\t\telse {\n\t\t\tthis.innerEventTarget = this\n\t\t}\n\t}\n\t/**\n\t * Adds the listener function to the end of the listeners array for the event named eventName. No checks \n\t * are made to see if the listener has already been added. Multiple calls passing the same combination \n\t * of eventName and listener will result in the listener being added, and called, multiple times.\n\t * @param {string} eventName The event type name\n\t * @param {*} listener The listener function where has arbitrary arguments\n\t */\n\ton(eventName, listener) {\n\t\tif(this.innerEventTarget.addEventListener) {\n\t\t\tlet nativeListener = (event) => {\n\t\t\t\tlistener.apply(this, event.detail)\n\t\t\t}\n\t\t\tlistener.nativeListener = nativeListener\n\t\t\tthis.innerEventTarget.addEventListener(eventName, nativeListener)\n\t\t}\n\t\telse {\n\t\t\tsuper.on(eventName, listener)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Synchronously calls each of the listeners registered for the event named eventName, in the order \n\t * they were registered, passing the supplied arguments to each.\n\t * \n\t * @param {string} eventName The event type name\n\t * @param  {...any} args \n\t */\n\temit(eventName, ...args) {\n\t\tif(this.innerEventTarget.dispatchEvent) {\n\t\t\tthis.innerEventTarget.dispatchEvent(this._makeEvent(eventName, args))\n\t\t}\n\t\telse {\n\t\t\tsuper.emit(eventName, ...args)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Removes the specified listener from the listener array for the event named eventName.\n\t * @param {string} eventName The event type name\n\t * @param {function} listener The listener function\n\t */\n\tremoveListener(eventName, listener) {\n\t\tif(this.innerEventTarget.removeEventListener) {\n\t\t\tlistener = listener.nativeListener || listener\n\t\t\tthis.innerEventTarget.removeEventListener(eventName, listener)\n\t\t}\n\t\telse {\n\t\t\tsuper.removeListener(eventName, listener)\n\t\t}\n\t\treturn this\n\t}\n\t\n\t_makeEvent(eventName, args) {\n\t\tif(typeof CustomEvent === 'function') {\n\t\t\treturn new CustomEvent(eventName, {\n\t\t\t\tdetail: args\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet evt = new Event(eventName)\n\t\t\tevt.detail = args\n\t\t\treturn evt\n\t\t}\n\t}\n}","let Emitter\nimport Streamish from \"./streamish.mjs\"\nimport EventEmitter from \"./event-emitter.mjs\"\n\nif (typeof EventTarget !== 'undefined') {\n\tEmitter = EventEmitter\n}\nelse {\n\tEmitter = Streamish\n}\n\n\nexport default Emitter","\nexport default class Streamish {\n\tconstructor() {\n\t\tthis.handles = {}\n\t}\n\n\ton(evt, handle) {\n\t\tlet handles = this.handles[evt]\n\t\tif (!handles) {\n\t\t\thandles = this.handles[evt] = []\n\t\t}\n\t\thandles.push(handle)\n\t\treturn this\n\t}\n\n\temit(evt, ...args) {\n\t\tif (evt in this.handles) {\n\t\t\tfor (let handle of this.handles[evt]) {\n\t\t\t\thandle.apply(this, args)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the specified listener from the listener array for the event named eventName.\n\t * @param {string} eventName The event type name\n\t * @param {function} listener The listener function\n\t */\n\tremoveListener(eventName, listener) {\n\t\tif (eventName in this.handles) {\n\t\t\tthis.handles[eventName] = this.handles[eventName].filter(func => {\n\t\t\t\treturn func !== listener\n\t\t\t})\n\t\t}\n\t}\n}","export default function allKeys(data) {\n\tlet keys = new Set()\n\tfor(let obj of data) {\n\t\tfor(let key of Object.keys(obj)) {\n\t\t\tkeys.add(key)\n\t\t}\n\t}\n\t\n\treturn Array.from(keys)\n}","import allKeys from \"./all-keys.mjs\";\n\n\n/**\n * Converts an array of objects to a CSV string\n * @param {array[object]} data \n * @param {object} [options] \n * @param {object} [options.headers] an object representing the headers to use, which the keys are the same as they keys in the data\n * objects and the values are the strings to use for the column heads. If no headers are specified there will be a column for each of\n * the keys present in any of the data objects \n * @param {object} [options.separator] column separator. ',' by default \n * @param {object} [options.newline] line separator. '\\n' by default \n * @param {object} [options.sendHeaders] if true, column headers will be generated. true by default\n * @returns {string} csv text\n */\nexport default function convert(data, {\n\theaders\n\t, separator = ','\n  \t, newline = '\\n'\n  \t, sendHeaders = true\n\n} ={}) {\n\tdata = [...data]\n\tlet rows = []\n\tlet keys\n\tif(!headers) {\n\t\tkeys = allKeys(data)\n\t\tif(sendHeaders) {\n\t\t\theaders = keys.reduce((acc, key) => {\n\t\t\t\tacc[key] = key\n\t\t\t\treturn acc\n\t\t\t}, {})\n\t\t}\n\t}\n\telse {\n\t\tkeys = Object.keys(headers)\n\t}\n\n\tif(sendHeaders) {\n\t\trows.push(valuesRow(Object.values(headers), separator))\n\t}\n\t\n\tfor(let obj of data) {\n\t\tlet values = []\n\t\tfor(let key of keys) {\n\t\t\tvalues.push(obj[key])\n\t\t}\n\t\trows.push(valuesRow(values, separator))\n\t}\n\n\t\n\treturn rows.join(newline)\n}\n\n\nfunction valuesRow(values, separator) {\n\tlet cols = values.map(makeStringValue).map(quoteValue)\n\treturn cols.join(separator)\n}\n\nfunction makeStringValue(value) {\n\tif(value === null || value === undefined ) {\n\t\treturn ''\n\t}\n\tif(typeof value !== 'string') {\n\t\treturn '' + value\n\t}\n\treturn value\n}\n\nfunction quoteValue(value) {\n\treturn '\"' + value.split('\"').join('\"\"') + '\"'\n}","function addCallbackToPromise(promise, callback) {\n\tif(callback) {\n\t\tpromise = promise.then((obj) => {\n\t\t\tcallback(null, obj)\n\t\t}).catch((err) => {\n\t\t\tcallback(err)\n\t\t})\n\t}\n\t\n\treturn promise\n}\n\nmodule.exports = addCallbackToPromise","export default \".dialog-frame {\\n\\tposition: fixed;\\n\\ttop: 0;\\n\\tbottom: 0;\\n\\tleft: 0;\\n\\tright: 0;\\n\\tz-index: 11000;\\n\\topacity: 0;\\n\\ttransition: opacity .3s;\\n\\toverflow: hidden;\\n\\t\\n\\t\\n\\tdisplay: grid;\\n\\tjustify-content: center;\\n\\talign-content: center;\\n\\tpadding: 5vh 5%;\\n}\\n\\n.dialog-frame.open {\\n\\topacity: 1;\\n}\\n\\n.dialog-frame .mask {\\n\\tposition: absolute;\\n\\tbox-sizing: border-box;\\n\\ttop: 0;\\n\\tbottom: 0;\\n\\tleft: 0;\\n\\tright: 0;\\n\\tbackground-color: #333333;\\n\\topacity: .7;\\n\\theight: 100%;\\n\\tz-index: 0;\\n\\t\\n}\\n\\n\\n.dialog-frame .the-dialog {\\n\\tposition: relative;\\n\\tdisplay: inline-block;\\n\\tz-index: 1;\\n\\tborder-radius: 5px;\\n\\tbackground-color: white;\\n\\toverflow: hidden;\\n\\ttransform: scale(.84);\\n\\ttransition: transform 0.262s cubic-bezier(.77,-1.72,.08,1);\\n}\\n\\n.dialog-frame.open .the-dialog {\\n\\ttransform: scale(1);\\n}\\n\\n.dialog-frame .the-dialog .close {\\n\\tposition: absolute;\\n\\ttop: 0px;\\n\\tright: 0px;\\n\\tpadding: 8px 10px 10px 10px;\\n\\tcursor: pointer;\\n}\\n\\n.dialog-frame .the-dialog .head {\\n\\tborder-bottom: solid #aaaaaa 1px;\\n\\tline-height: 2em;\\n\\tpadding: 0 10px;\\n}\\n\\n.dialog-frame .the-dialog .body {\\n\\tbox-sizing: border-box;\\n\\tpadding: 20px;\\n\\toverflow: auto;\\n\\tmax-height: calc(90vh - 75px);\\n}\\n\\n.dialog-frame .the-dialog .foot {\\n\\tborder-top: solid #aaaaaa 1px;\\n\\tpadding: 10px;\\n}\\n\\n.dialog-frame .the-dialog .foot button {\\n\\tmargin-right: 15px;\\n}\";","let dialogStyles = require('./dialog-styles.txt')\nlet sequence = 0\n\n// If we're loading via a module system or packed by webpack, we may\n// have a module here instead of the value. We need to check for default\n// and use that if it exists.\nif(typeof dialogStyles !== 'string' && dialogStyles.default) {\n\tdialogStyles = dialogStyles.default\t\n}\n\n\n/**\n * A button definition.\n * @typedef {Object} Button\n * @property {string} classes Classes to add to the button\n * @property {string} label Text shown to the user\n */\n\n\n\n/**\n * A whole page dialog. \n * @param {object} options \n * @param {string,function} options.body The contents of the body section. This can be a string,\n * in which case it will just be inserted into the body. It can be a function, in which case\n * it is expected to return a string (which will be inserted) or a Promise, which should resolve to\n * a string, which will be inserted. However, this function is passed the body element and dialog\n * object as arguments, so it can also modify content directory and return an empty string.\n * @param {object} options.on An object which the key is the selector and the value is a funtion\n * which is called when the object with that selector is clicked. If the function returns false the\n * dialog will not be closed. If it returns a Promise, the promise will be resolved and if the resolved\n * value is false, it will not be closed. Any other return condition will result in the dialog being\n * closed.\n * @param {Button[]} options.buttons The buttons that will show up in the footer of the dialog. If buttons are not\n * specified, \"OK\" and \"Cancel\" buttons will be added.\n * @param {string} options.title The title of the dialog\n * @param {string} options.dialogFrameClass An additional string inserted into the class attribute for\n * specific styling of specific types of dialog boxes.\n * @param {function} options.afterOpen A function which is called after open with the body element and dialog object\n * as arguments.\n */\nvar Dialog = function(options) {\n\tthis.id = \"dialog\" + (new Date().getTime()) + (sequence++)\n\tObject.assign(this, options)\n\tif(!this.on) {\n\t\tthis.on = {}\n\t}\n\tif(!this.on['.btn-cancel']) {\n\t\tthis.on['.btn-cancel'] = function() {\n\t\t}\n\t}\n\tif(!this.on['.btn-close']) {\n\t\tthis.on['.btn-close'] = function() {\n\t\t}\n\t}\n\t\n\tif(!options.buttons) {\n\t\tthis.buttons = [\n\t\t\t{\n\t\t\t\tclasses: 'btn btn-primary btn-ok',\n\t\t\t\tlabel: 'OK'\n\t\t\t},\n\t\t\t{\n\t\t\t\tclasses: 'btn btn-cancel',\n\t\t\t\tlabel: 'Cancel'\n\t\t\t}\n\t\t]\n\t}\n\t\n\tthis.body = options.body\n}\n\nDialog.prototype.getBodySelector = function() {\n\treturn '#' + this.id + ' .body'\n}\n\nDialog.prototype.getFrameSelector = function() {\n\treturn '#' + this.id \n}\n\nDialog.prototype.addStylesIfNeeded = function() {\n\tif(!document.querySelector('#dialog-frame-styles')) {\n\t\tdocument.querySelector('head').insertAdjacentHTML('beforeend', \n\t\t\t'<style type=\"text/css\" id=\"dialog-frame-styles\">' +\n\t\t\tdialogStyles + \n\t\t\t'</style>')\n\t}\n}\n\nDialog.prototype.renderButton = function(button) {\n\treturn `<button class=\"${button.classes}\" type=\"button\">${button.label}</button>`\n}\n\nDialog.prototype.generateFrame = function() {\n\tlet buttons = this.buttons.map(this.renderButton).join('')\n\t\n\treturn `\n<div class=\"dialog-frame ${this.dialogFrameClass || ''}\" id=\"${this.id}\" >\n\t<div class=\"mask\">\n\t</div>\n\t<div class=\"the-dialog\">\n\t\t<div class=\"close btn-close\">&times;</div>\n\t\t<div class=\"head\">\n\t\t\t${this.title}\n\t\t</div>\n\t\t<div class=\"body\">\n\t\t</div>\n\t\t<div class=\"foot\">\n\t\t\t${buttons}\n\t\t</div>\n\t</div>\n</div>\n\t`\n}\n\nDialog.prototype.open = function() {\n\tlet self = this\n\tthis.addStylesIfNeeded()\n\tdocument.querySelector('body').insertAdjacentHTML('beforeend', this.generateFrame())\n\t\n\tlet bodySelector = this.getBodySelector()\n\tlet frameSelector = this.getFrameSelector()\n\t\n\tlet bodyContent\n\tlet bodyElement = document.querySelector(bodySelector)\n\tlet frameElement = document.querySelector(frameSelector)\n\n\t\n\t\n\tframeElement.addEventListener('click', function(evt) {\n\t\tfor(let selector in self.on) {\n\t\t\tlet target = frameElement.querySelector(selector)\n\t\t\tif(evt.target == target) {\n\t\t\t\tlet result = self.on[selector]()\n\t\t\t\tif(typeof result === 'boolean') {\n\t\t\t\t\tif(result) {\n\t\t\t\t\t\tself.close()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(typeof Promise === 'function' && result instanceof Promise) {\n\t\t\t\t\tresult.then(function(result) {\n\t\t\t\t\t\tif(result !== false) {\n\t\t\t\t\t\t\tself.close()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tself.close()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t})\n\t\n\tfunction afterOpenResizeSetup() {\n\t\tsetTimeout(function() {\n\t\t\tlet head = document.querySelector(frameSelector + ' .head').clientHeight \n\t\t\tlet foot = document.querySelector(frameSelector + ' .foot').clientHeight\n\t\t\tlet topAndBottom = head + foot\n\n\t\t\tbodyElement.style.maxHeight = 'calc(90vh - ' + topAndBottom + 'px)'\n\t\t\tframeElement.classList.add('open')\n\t\t\t\n\t\t\tif(self.afterOpen) {\n\t\t\t\tself.afterOpen(bodyElement, self)\n\t\t\t}\n\t\t})\n\t}\n\t\n\tif(typeof this.body === 'function') {\n\t\tbodyContent = this.body(bodyElement, this)\n\t}\n\telse if(typeof this.body == 'string') {\n\t\tbodyContent = this.body\n\t}\n\n\tif(typeof bodyContent === 'string') {\n\t\tbodyElement.insertAdjacentHTML('beforeend', bodyContent)\n\t\tafterOpenResizeSetup()\n\t}\n\telse if(typeof Promise === 'function' && bodyContent instanceof Promise) {\n\t\tbodyContent.then(function(content) {\n\t\t\tbodyElement.insertAdjacentHTML('beforeend', content)\n\t\t\tafterOpenResizeSetup()\n\t\t})\n\t}\n\t\n\n\treturn this\n}\n\nDialog.prototype.close = function() {\n\tlet frame = document.querySelector(this.getFrameSelector())\n\tframe.remove()\n\treturn this\n}\n\nmodule.exports = Dialog\n\n","function createTransformFunctionFromStream(stream) {\n\tstream.innerFilter = stream.transform || stream._transform\n\tlet last\n\n\tstream.push = function(pushed) {\n\t\tlast = pushed\n\t}\n\n\treturn function(data) {\n\t\tlast = null\n\t\tstream.innerFilter(data, 'utf-8', function(){})\n\t\treturn last\n\t}\n}\n\nfunction isNullish(data) {\n\treturn typeof data === 'undefined' || typeof data === 'null' \n}\n\n\nfunction writeToProcessors(data) {\n\tObject.values(filterLog.logsProc).forEach(processor => processor.head.write(data))\n}\n\nfunction makeLogger(name, stream) {\n\tstream._name = name\n\t\n\tstream.write = function(data, enc, callback) {\n\t\tif(typeof data == 'string') {\n\t\t\tdata = {\n\t\t\t\tmsg: data\n\t\t\t}\n\t\t}\n\t\twriteToProcessors(Object.assign(filterLog.baseInformationGenerator(), \n\t\t{loggerName: name}, filterLog.logsData[name], stream.loggerSpecificData, data))\n\n\t\tif(callback) {\n\t\t\tcallback()\n\t\t}\n\t}\n\t\n\tObject.keys(filterLog.levels).forEach(key => {\n\t\tstream[key.toLowerCase()] = function(data) {\n\t\t\tif(typeof data == 'string') {\n\t\t\t\tdata = {\n\t\t\t\t\tmsg: data\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet args = [...arguments]\n\t\t\t\targs.shift()\n\t\t\t\tif(args.length > 0) {\n\t\t\t\t\tdata.args = args\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(data instanceof Error) {\n\t\t\t\tdata = {\n\t\t\t\t\terror: {\n\t\t\t\t\t\tmessage: data.message\n\t\t\t\t\t\t, stack: data.stack\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(typeof data == 'object') {\n\t\t\t\tstream.write(Object.assign({}, data, {level: filterLog.levels[key]}))\n\t\t\t}\n\t\t}\n\t})\n\treturn stream\n}\n\n\nvar filterLog = function() {\n\tvar args = []\n\t\n\tfor(var i = 0; i < arguments.length; i++) {\n\t\targs.push(arguments[i])\n\t}\n\t\n\t\n\tvar initData = {}\n\tvar loggerName = filterLog.defaultData.loggerName\n\tvar hasSpecificData = false\n\t\n\t// Look at the first two arguments. This is either a name and base information\n\t// object or just a base information object (probably with a name, but not always)\n\t// or neither of these things, where let's assume they're tring to define the\n\t// standard logger\n\tif(args.length > 0) {\n\t\tvar first = args.shift()\n\t\t\n\t\tif(typeof first == 'string') {\n\t\t\tloggerName = first\n\t\t\t\n\t\t\tif(args.length > 0 && typeof args[0] == 'object') {\n\t\t\t\tinitData = args.shift()\n\t\t\t\tloggerName = initData.loggerName || loggerName\n\t\t\t\thasSpecificData = true\n\t\t\t}\n\t\t}\n\t\telse if(typeof first == 'object') {\n\t\t\tloggerName = first.loggerName || loggerName\n\t\t\tinitData = first\n\t\t\thasSpecificData = true\n\t\t}\n\t}\n\t\n\tinitData.loggerName = loggerName\n\t\n\tvar logger = makeLogger(loggerName, {})\n\tif(hasSpecificData) {\n\t\t// They have some logger specifc data they want to use\n\t\tlogger.loggerSpecificData = initData\n\t}\n\t\n\treturn logger\n}\n\nif(!global['filter-log-logsData']) {\n\tglobal['filter-log-logsData'] = {}\n}\nfilterLog.logsData = global['filter-log-logsData']\n\nif(!global['filter-log-logsProc']) {\n\tglobal['filter-log-logsProc'] = {}\n}\nfilterLog.logsProc = global['filter-log-logsProc']\n\n\nfilterLog.defineLoggerBaseData = function(loggerName, data) {\n\tdata = Object.assign({}, data)\n\tdelete data.loggerName\n\tfilterLog.logsData[loggerName] = data\n}\n\nfilterLog.defineProcessor = function(/* string */ name, /* object */ baseData, \n\t/* stream */ destination, /* function */ filter, /* stream */ transformer) {\n\tvar procData = {\n\t\tname: name,\n\t\tdestination: destination || console.log,\n\t\tbaseData: Object.assign({}, baseData, { processorName: name }),\n\t\t\n\t\t// should be a function or stream of some sort\n\t\tfilter: filter || function(item) { return true }\n\t}\n\t\n\t// should be a function or stream of some sort\n\tif(transformer) {\n\t\tprocData.transformer = transformer\n\t}\n\telse {\n\t\tif(procData.destination._writableState && procData.destination._writableState.objectMode == false) {\n\t\t\tprocData.transformer = ((data) => { return JSON.stringify(data) + '\\n' })\n\t\t} \n\t\telse {\n\t\t\tprocData.transformer = ((data) => { return data })\n\t\t}\n\t}\n\t\n\tif(typeof procData.filter === 'object') {\n\t\t// Assume this is a stream then\n\t\tprocData.filter = createTransformFunctionFromStream(procData.filter)\n\t}\n\tif(typeof procData.transformer === 'object') {\n\t\t// Assume this is a stream then\n\t\tprocData.transformer = createTransformFunctionFromStream(procData.transformer)\n\t}\n\n\tprocData.head = {\n\t\twrite(data) {\n\t\t\tif(isNullish(data)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlet included = procData.filter(data)\n\t\t\t\n\t\t\tif(isNullish(included)) {\n\t\t\t\t// it was probably transformed by a filtering stream\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif(typeof included === 'boolean') {\n\t\t\t\tif(!included) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(typeof included === 'object') {\n\t\t\t\t// it was probably transformed by a filtering stream\n\t\t\t\tdata = included\n\t\t\t}\n\t\t\t\n\t\t\tif(isNullish(data)) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tdata = procData.transformer(data)\n\t\t\tif(isNullish(data)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(procData.destination.write) {\n\t\t\t\t// probably a stream\n\t\t\t\tprocData.destination.write(data)\n\t\t\t}\n\t\t\telse if(typeof procData.destination === 'function') {\n\t\t\t\tprocData.destination(data)\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfilterLog.logsProc[name] = procData\n}\n\nfilterLog.createStdOutProcessor = function() {\n\tfilterLog.defineProcessor('std-out', {}, console.log)\n}\n\nfilterLog.defaultData = {\n\tloggerName: 'standard'\n}\n\nfilterLog.clearProcessors = function() {\n\tfilterLog.logsProc = {}\n}\n\nfilterLog.removeProcessor = function(name) {\n\tdelete filterLog.logsProc[name] \n}\n\nfilterLog.baseInformationGenerator = function() {\n\treturn {\n\t\tdate: new Date()\n\t}\n}\n\nfilterLog.levels = require('./levels')\n\n\nmodule.exports = filterLog","var levels = {\n\tDEBUG: 10,\n\tINFO: 20,\n\tWARN: 30,\n\tERROR: 40,\n\tFATAL: 50,\n\tOFF: 60\n}\n\nmodule.exports = levels","\nconst inputInjector = require('input-value-injector')\nconst textareaInjector = require('textarea-value-injector')\nconst selectInjector = require('select-value-injector')\n\nlet injectValues = function(text, values) {\n\t\n\tlet result = inputInjector(text, values)\n\tresult = textareaInjector(result, values)\n\tresult = selectInjector(result, values)\n\t\n\t\n\treturn result\n}\n\nmodule.exports = injectValues","const {\n\tevalFunction\n\t, attributeEscapes\n\t, fetchValue\n\t, isOrContains\n\t, escForRegex\n\t, escapeAttributeValue\n} = require('value-injector-common')\n\n\nfunction makeDate(date) {\n\tif(date instanceof Date) {\n\t\treturn date\n\t}\n\t\n\tif(typeof date === 'string') {\n\t\tif(date.indexOf('T') > -1) {\n\t\t\t// this is probably a full date time string with time zone\n\t\t\treturn new Date(date)\n\t\t}\n\t\telse {\n\t\t\t// This is just a raw date and won't be back converted correctly if not shifted\n\t\t\t// to gmt\n\t\t\treturn new Date(then.getTime() + (new Date().getTimezoneOffset() * 60 * 1000))\n\t\t}\n\t}\n\treturn new Date(date)\n}\n\nfunction pad(value, len, pad) {\n\tvalue = '' + value\n\twhile(value.length < len) {\n\t\tvalue = pad + value\n\t}\n\treturn value\n}\n\nfunction formatDate(date) {\n\tif(typeof date === 'string') {\n\t\treturn date\n\t}\n\tdate = makeDate(date)\n\tlet year = date.getFullYear()\n\tlet month = pad(date.getMonth() + 1, 2, '0')\n\tlet day = pad(date.getDate(), 2, '0')\n\n\treturn `${year}-${month}-${day}`\n}\nfunction formatTime(date) {\n\tif(typeof date === 'string') {\n\t\treturn date\n\t}\n\tdate = makeDate(date)\n\tlet hour = pad(date.getHours(), 2, '0')\n\tlet minute = pad(date.getMinutes(), 2, '0')\n\tlet sec = pad(date.getSeconds(), 2, '0')\n\tlet milli = pad(date.getMilliseconds(), 4, '0')\n\treturn `${hour}:${minute}`\n}\n\nfunction formatCombined(date) {\n\tif(typeof date === 'string') {\n\t\treturn date\n\t}\n\treturn formatDate(date) + 'T' + formatTime(date)\n}\n\nlet nameAttrPattern = /\\sname=[\"'](.*?)[\"']/i\nlet valAttrPattern = /\\svalue=[\"'](.*?)[\"']/i\nlet typeAttrPattern = /\\stype=[\"'](.*?)[\"']/i\nlet inputPattern = /(<input.*?>)/i\nlet checkedAttrPattern = /\\schecked(=[\"'](.*?)[\"'])?/i\n\n\nlet injectValues = function(text, values) {\n\t\n\tlet result = ''\n\t\n\ttext.split(inputPattern).forEach((item) => {\n\t\tif(item.toLowerCase().indexOf('<input') == 0) {\n\t\t\tlet r = item.match(nameAttrPattern)\n\t\t\tlet name = r ? r[1] : null\n\t\t\t\n\t\t\tr = item.match(typeAttrPattern)\n\t\t\tlet type = (r ? r[1] : 'text').toLowerCase()\n\t\t\t\n\t\t\t\n\t\t\tif(type === 'text' || type === 'hidden' || type === 'date' || type === 'time' || type === 'datetime-local'\n\t\t\t|| type === 'search' || type === 'email' || type === 'number' || type === 'tel' || type === 'url' \n\t\t\t|| type === 'month' || type === 'week' || type === 'color' || type === 'week'\n\t\t\t) {\n\t\t\t\tr = item.match(valAttrPattern)\n\t\t\t\tlet value = r ? r[1] : null\n\t\t\t\t\n\t\t\t\tlet newVal = fetchValue(values, name)\n\t\t\t\tif(type === 'date') {\n\t\t\t\t\tif(newVal) {\n\t\t\t\t\t\tlet orgValue = newVal\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tnewVal = formatDate(newVal)\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tnewVal = orgValue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(newVal == 'Invalid date') {\n\t\t\t\t\t\t\tnewVal = orgValue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(type === 'time') {\n\t\t\t\t\tif(newVal) {\n\t\t\t\t\t\tlet orgValue = newVal\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tnewVal = formatTime(newVal)\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tnewVal = orgValue\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(newVal == 'Invalid date') {\n\t\t\t\t\t\t\tnewVal = orgValue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(type === 'datetime-local') {\n\t\t\t\t\tif(newVal) {\n\t\t\t\t\t\tlet orgValue = newVal\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tnewVal = formatCombined(newVal)\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\n\t\t\t\t\t\tif(newVal == 'Invalid date') {\n\t\t\t\t\t\t\tnewVal = orgValue\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet replacementText\n\t\t\t\tif(newVal === null || newVal === undefined) {\n\t\t\t\t\treplacementText = ''\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewVal = escapeAttributeValue(newVal)\n\t\t\t\t\treplacementText = ' value=\"' + newVal + '\"'\n\t\t\t\t}\n\n\n\t\t\t\tif(value != null) {\n\t\t\t\t\tif(newVal != null) {\n\t\t\t\t\t\titem = item.replace(valAttrPattern, replacementText)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(item.endsWith('/>')) {\n\t\t\t\t\t\titem = item.slice(0, -2)\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\titem = item.slice(0, -1)\n\t\t\t\t\t}\n\t\t\t\t\titem = item + replacementText + ' />'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tresult += item\n\t\t\t}\n\t\t\telse if(type === 'radio') {\n\t\t\t\tr = item.match(valAttrPattern)\n\t\t\t\tlet value = r ? r[1] : null\n\t\t\t\tlet newVal = fetchValue(values, name)\n\t\t\t\t\n\t\t\t\tif(!value) {\n\t\t\t\t\t// We don't have a specific value, so we'll say it's checked\n\t\t\t\t\t// if the new value is truthy.\n\t\t\t\t\t\n\t\t\t\t\tif(!newVal || newVal == 'false' || newVal == 'off') {\n\t\t\t\t\t\titem = item.replace(checkedAttrPattern, '')\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// so we should have it checked\n\t\t\t\t\t\tif(!item.match(checkedAttrPattern)) {\n\t\t\t\t\t\t\tif(item.endsWith('/>')) {\n\t\t\t\t\t\t\t\titem = item.slice(0, -2)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\titem = item.slice(0, -1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titem = item + ' checked=\"checked\" />'  \n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if the above were not true, it's because it's already checked\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!newVal || newVal != value) {\n\t\t\t\t\t\t// if the new value is blank or does not equal the value in\n\t\t\t\t\t\t// in the value attribute, we'll make it unchecked\n\t\t\t\t\t\titem = item.replace(checkedAttrPattern, '')\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// so we should have it checked\n\t\t\t\t\t\tif(!item.match(checkedAttrPattern)) {\n\t\t\t\t\t\t\tif(item.endsWith('/>')) {\n\t\t\t\t\t\t\t\titem = item.slice(0, -2)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\titem = item.slice(0, -1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titem = item + ' checked=\"checked\" />'  \n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if the above were not true, it's because it's already checked\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tresult += item\n\t\t\t}\n\t\t\telse if(type === 'checkbox') {\n\t\t\t\tr = item.match(valAttrPattern)\n\t\t\t\tlet value = r ? r[1] : null\n\t\t\t\tlet newVal = fetchValue(values, name)\n\t\t\t\t\n\t\t\t\tif(!value) {\n\t\t\t\t\t// We don't have a specific value, so we'll say it's checked\n\t\t\t\t\t// if the new value is truthy.\n\t\t\t\t\t\n\t\t\t\t\tif(!newVal || isOrContains('false', newVal) || isOrContains('off', newVal)) {\n\t\t\t\t\t\titem = item.replace(checkedAttrPattern, '')\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// so we should have it checked\n\t\t\t\t\t\tif(!item.match(checkedAttrPattern)) {\n\t\t\t\t\t\t\tif(item.endsWith('/>')) {\n\t\t\t\t\t\t\t\titem = item.slice(0, -2)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\titem = item.slice(0, -1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titem = item + ' checked=\"checked\" />'  \n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if the above were not true, it's because it's already checked\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!newVal || !isOrContains(value, newVal)) {\n\t\t\t\t\t\t// if the new value is blank or does not equal the value in\n\t\t\t\t\t\t// in the value attribute, we'll make it unchecked\n\t\t\t\t\t\titem = item.replace(checkedAttrPattern, '')\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// so we should have it checked\n\t\t\t\t\t\tif(!item.match(checkedAttrPattern)) {\n\t\t\t\t\t\t\tif(item.endsWith('/>')) {\n\t\t\t\t\t\t\t\titem = item.slice(0, -2)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\titem = item.slice(0, -1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titem = item + ' checked=\"checked\" />'  \n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if the above were not true, it's because it's already checked\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tresult += item\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult += item\n\t\t\t}\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tresult += item\n\t\t}\n\t})\n\t\n\treturn result\n}\n\n\nmodule.exports = injectValues\n","import Types from \"./types.mjs\"\nimport { determineType } from \"./determine-type.mjs\"\n\nexport default function commonTypeReducer(current, next) {\n\n\tif(current === Types.OBJECT) {\n\t\t// This is the most general type, so just keep returning it\n\t\treturn current\n\t}\n\n\tlet type = determineType(next)\n\tif(type === null) {\n\t\treturn current\n\t}\n\t\n\tif(type === Types.OBJECT) {\n\t\treturn Types.OBJECT\n\t}\n\t\n\n\tif(\n\t\ttype === Types.DATETIME\n\t\t&& current === null\n\t) {\n\t\treturn Types.DATETIME\n\t}\n\telse if(\n\t\ttype === Types.DATETIME\n\t\t&& current !== Types.DATETIME\n\t) {\n\t\tif(current === Types.MEDIUMTEXT) {\n\t\t\treturn current\n\t\t}\n\t\telse {\n\t\t\treturn Types.TEXT\n\t\t}\n\t}\n\n\tif(\n\t\ttype === Types.INT\n\t\t&& current === null\n\t) {\n\t\treturn Types.INT\n\t}\n\telse if(\n\t\ttype === Types.INT\n\t\t&& current !== Types.INT\n\t) {\n\t\tif(current === Types.FLOAT) {\n\t\t\treturn current\n\t\t}\n\t\telse if(current === Types.MEDIUMTEXT) {\n\t\t\treturn current\n\t\t}\n\t\telse {\n\t\t\treturn Types.TEXT\n\t\t}\n\t}\n\t\n\n\tif(\n\t\ttype === Types.FLOAT\n\t\t&& current === null\n\t) {\n\t\treturn Types.FLOAT\n\t}\n\telse if(\n\t\ttype === Types.FLOAT\n\t\t&& current !== Types.FLOAT\n\t) {\n\t\tif(current === Types.INT) {\n\t\t\treturn Types.FLOAT\n\t\t}\n\t\telse if(current === Types.MEDIUMTEXT) {\n\t\t\treturn current\n\t\t}\n\t\telse {\n\t\t\treturn Types.TEXT\n\t\t}\n\t}\n\t\n\tif(\n\t\ttype === Types.BOOL\n\t\t&& current === null\n\t) {\n\t\treturn Types.BOOL\n\t}\n\telse if(\n\t\ttype === Types.BOOL\n\t\t&& current !== Types.BOOL\n\t) {\n\t\tif(current === Types.MEDIUMTEXT) {\n\t\t\treturn current\n\t\t}\n\t\telse {\n\t\t\treturn Types.TEXT\n\t\t}\n\t}\n\t\n\tif(\n\t\ttype === Types.TEXT\n\t\t&& current === null\n\t) {\n\t\treturn Types.TEXT\n\t}\n\telse if(\n\t\ttype === Types.TEXT\n\t\t&& current !== Types.TEXT\n\t) {\n\t\tif(current === Types.MEDIUMTEXT) {\n\t\t\treturn current\n\t\t}\n\t\telse {\n\t\t\treturn Types.TEXT\n\t\t}\n\t}\n\n\t\n\tif(\n\t\ttype === Types.MEDIUMTEXT\n\t\t&& current === null\n\t) {\n\t\treturn Types.MEDIUMTEXT\n\t}\n\telse if(\n\t\ttype === Types.MEDIUMTEXT\n\t\t&& current !== Types.MEDIUMTEXT\n\t) {\n\t\treturn Types.MEDIUMTEXT\n\t}\n\n\treturn current\n}","import { determineTypes } from \"./determine-types.mjs\"\n\n/**\n * Create type description objects, one per field, for the the fields\n * of the `objects` objects. \n * \n * Type descriptions look like:\n * \n * ```js\n * { field: 'a', type: 'INT' }\n * ```\n * @param {array[object]} objects \n */\nexport default function createTypeDescriptions(objects) {\n\tif(Array.isArray(objects) === false) {\n\t\tthrow new Error('argument is not an array')\n\t}\n\t\n\tlet descriptions = []\n\n\tobjects = objects.filter(obj => !!obj)\n\n\tlet keys = new Set()\n\tfor(let obj of objects) {\n\t\tfor(let key of Object.keys(obj)) {\n\t\t\tkeys.add(key)\n\t\t}\n\t}\n\t\n\tfor(let key of keys) {\n\t\tlet values = []\n\t\tfor(let obj of objects) {\n\t\t\tvalues.push(obj[key])\n\t\t}\n\t\t\n\t\tlet type = determineTypes(values)\n\t\t\n\t\tlet desc = {\n\t\t\tfield: key\n\t\t\t, type: type\n\t\t}\n\t\tdescriptions.push(desc)\n\n\t}\n\n\treturn descriptions\n}\n\n\n","\nlet maxTextFieldSize = 65000\nimport Types from \"./types.mjs\"\n\nlet maxIntSize = 1000000000\nlet maxIntLength = 9\n/**\n * Determine which SQL type should be use for this value. If no determination\n * can be made, null is returned.\n * \n * NaN always returns null\n * @param {any} value \n * @returns Types.TEXT, Types.MEDIUMTEXT, Types.BOOL, Types.INT, Types.FLOAT, 'DATETIME', 'OBJECT', null\n */\nexport function determineType(value) {\n\tif(value === null || value === undefined) {\n\t\treturn null\n\t}\n\t\n\tif(typeof value === 'boolean') {\n\t\treturn Types.BOOL\n\t}\n\t\n\tif(value instanceof Date) {\n\t\treturn Types.DATETIME\n\t}\n\t\n\tif(Array.isArray(value)) {\n\t\treturn Types.OBJECT\n\t}\n\t\n\tif(Number.isInteger(value)) {\n\t\tif(value > maxIntSize) {\n\t\t\t// Because it will probably overflow the SQL INT size\n\t\t\treturn Types.TEXT\n\t\t}\n\t\treturn Types.INT\n\t}\n\n\ttry {\n\t\tif(typeof value === 'string') {\n\t\t\tif(\n\t\t\t\tvalue.trim().toLowerCase() === 'true'\n\t\t\t\t|| value.trim().toLowerCase() === 'false'\n\t\t\t) {\n\t\t\t\treturn Types.BOOL\n\t\t\t}\n\t\t}\n\t}\n\tcatch(e) {\n\t\t// no problem. Just not a bool\n\t}\n\t\n\n\ttry {\n\t\tif(typeof value === 'string') {\n\t\t\tlet i = parseInt(value.trim())\n\t\t\tif(\n\t\t\t\tNumber.isNaN(i) === false \n\t\t\t\t&& i == value\n\t\t\t) {\n\t\t\t\tif(value.length > maxIntLength || i > maxIntSize) {\n\t\t\t\t\treturn Types.TEXT\n\t\t\t\t}\n\t\t\t\treturn Types.INT\n\t\t\t}\n\t\t}\n\t}\n\tcatch(e) {\n\t\t// no problem. Just not an int\n\t}\n\t\n\tif(typeof value === 'number') {\n\t\tif(Number.isNaN(value)) {\n\t\t\treturn null\n\t\t}\n\t\tif(value > maxIntSize) {\n\t\t\treturn Types.TEXT\n\t\t}\n\t\treturn Types.FLOAT\n\t}\n\n\ttry {\n\t\tif(typeof value === 'string') {\n\t\t\tlet f = parseFloat(value.trim())\n\t\t\tif(\n\t\t\t\tNumber.isNaN(f) === false \n\t\t\t\t&& f == value\n\t\t\t) {\n\t\t\t\tif(value.length > maxIntLength || f > maxIntSize) {\n\t\t\t\t\treturn Types.TEXT\n\t\t\t\t}\n\t\t\t\treturn Types.FLOAT\n\t\t\t}\n\t\t}\n\t}\n\tcatch(e) {\n\t\t// no problem. Just not an float\n\t}\n\t\n\t\n\ttry {\n\t\tif(typeof value === 'string') {\n\t\t\tlet d = new Date(value.trim())\n\t\t\tif(\n\t\t\t\tNumber.isNaN(d.getTime()) === false \n\t\t\t\t&& ('' + d) !== 'Invalid Date'\n\t\t\t) {\n\t\t\t\treturn Types.DATETIME\n\t\t\t}\n\t\t}\n\t}\n\tcatch(e) {\n\t\t// no problem. Just not an date\n\t}\n\t\n\tif(typeof value === 'string') {\n\t\tif(value.length < maxTextFieldSize) {\n\t\t\treturn Types.TEXT\n\t\t}\n\t\telse {\n\t\t\treturn Types.MEDIUMTEXT\n\t\t}\n\t}\n\t\n\tif(typeof value === 'object') {\n\t\treturn Types.OBJECT\n\t}\n\t\n\treturn null\n\n}\n","import commonTypeReducer from \"./common-type-reducer.mjs\"\n\n/**\n * Determine the SQL type which should be used for these values. Nulls will\n * be ignored. \n * @param {array} values \n */\nexport function determineTypes(values) {\n\t\n\tif(!values) {\n\t\treturn null\n\t}\n\tif(Array.isArray(values) === false) {\n\t\treturn null\n\t}\n\t\n\treturn values.reduce(commonTypeReducer, null)\n\n\n}","\nexport default {\n\t\n\tTEXT: 'TEXT'\n\t, MEDIUMTEXT: 'MEDIUMTEXT'\n\t, BOOL: 'BOOL'\n\t, INT: 'INT'\n\t, FLOAT: 'FLOAT'\n\t, DATETIME: 'DATETIME'\n\t, OBJECT: 'OBJECT'\n}","const {\n\tevalFunction\n\t, attributeEscapes\n\t, fetchValue\n\t, isOrContains\n\t, escForRegex\n\t, escapeAttributeValue\n} = require('value-injector-common')\n\n\n\nlet nameAttrPattern = /\\sname=[\"'](.*?)[\"']/i\nlet valAttrPattern = /\\svalue=[\"'](.*?)[\"']/i\nlet typeAttrPattern = /\\stype=[\"'](.*?)[\"']/i\nlet selectPattern = /(<select[\\w\\W]*?select\\w*>)/im\nlet selectedAttrPattern = /\\sselected(=[\"'](.*?)[\"'])?/i\n\n\nlet injectValues = function(text, values) {\n\t\n\tlet result = ''\n\t\n\ttext.split(selectPattern).forEach((item) => {\n\t\tif(item.toLowerCase().indexOf('<select') == 0) {\n\t\t\tlet r = item.match(nameAttrPattern)\n\t\t\tlet name = r ? r[1] : null\n\t\t\t\n\t\t\tlet newVal = fetchValue(values, name)\n\t\t\tif(typeof newVal != 'undefined' && newVal !== null) {\n\t\t\t\titem = item.replace(selectedAttrPattern, '')\n\t\t\t\tlet optionMatch = item.match( new RegExp('value=[\"\\']' + escForRegex(newVal) + '[\"\\']', 'i'))\n\t\t\t\tif(optionMatch) {\n\t\t\t\t\tlet breakIndex = item.indexOf(optionMatch[0]) + optionMatch[0].length\n\t\t\t\t\titem = item.slice(0, breakIndex) + ' selected=\"selected\" ' + item.substring(breakIndex)\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult += item\n\t\t}\n\t\telse {\n\t\t\tresult += item\n\t\t}\n\t})\n\t\n\treturn result\n}\n\n\nmodule.exports = injectValues\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar typeChecker = function (type) {\n    var typeString = \"[object \" + type + \"]\";\n    return function (value) {\n        return getClassName(value) === typeString;\n    };\n};\nvar getClassName = function (value) { return Object.prototype.toString.call(value); };\nvar comparable = function (value) {\n    if (value instanceof Date) {\n        return value.getTime();\n    }\n    else if (isArray(value)) {\n        return value.map(comparable);\n    }\n    else if (value && typeof value.toJSON === \"function\") {\n        return value.toJSON();\n    }\n    return value;\n};\nvar coercePotentiallyNull = function (value) {\n    return value == null ? null : value;\n};\nvar isArray = typeChecker(\"Array\");\nvar isObject = typeChecker(\"Object\");\nvar isFunction = typeChecker(\"Function\");\nvar isProperty = function (item, key) {\n    return item.hasOwnProperty(key) && !isFunction(item[key]);\n};\nvar isVanillaObject = function (value) {\n    return (value &&\n        (value.constructor === Object ||\n            value.constructor === Array ||\n            value.constructor.toString() === \"function Object() { [native code] }\" ||\n            value.constructor.toString() === \"function Array() { [native code] }\") &&\n        !value.toJSON);\n};\nvar equals = function (a, b) {\n    if (a == null && a == b) {\n        return true;\n    }\n    if (a === b) {\n        return true;\n    }\n    if (Object.prototype.toString.call(a) !== Object.prototype.toString.call(b)) {\n        return false;\n    }\n    if (isArray(a)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, length_1 = a.length; i < length_1; i++) {\n            if (!equals(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    else if (isObject(a)) {\n        if (Object.keys(a).length !== Object.keys(b).length) {\n            return false;\n        }\n        for (var key in a) {\n            if (!equals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return false;\n};\n\n/**\n * Walks through each value given the context - used for nested operations. E.g:\n * { \"person.address\": { $eq: \"blarg\" }}\n */\nvar walkKeyPathValues = function (item, keyPath, next, depth, key, owner) {\n    var currentKey = keyPath[depth];\n    // if array, then try matching. Might fall through for cases like:\n    // { $eq: [1, 2, 3] }, [ 1, 2, 3 ].\n    if (isArray(item) &&\n        isNaN(Number(currentKey)) &&\n        !isProperty(item, currentKey)) {\n        for (var i = 0, length_1 = item.length; i < length_1; i++) {\n            // if FALSE is returned, then terminate walker. For operations, this simply\n            // means that the search critera was met.\n            if (!walkKeyPathValues(item[i], keyPath, next, depth, i, item)) {\n                return false;\n            }\n        }\n    }\n    if (depth === keyPath.length || item == null) {\n        return next(item, key, owner, depth === 0, depth === keyPath.length);\n    }\n    return walkKeyPathValues(item[currentKey], keyPath, next, depth + 1, currentKey, item);\n};\nvar BaseOperation = /** @class */ (function () {\n    function BaseOperation(params, owneryQuery, options, name) {\n        this.params = params;\n        this.owneryQuery = owneryQuery;\n        this.options = options;\n        this.name = name;\n        this.init();\n    }\n    BaseOperation.prototype.init = function () { };\n    BaseOperation.prototype.reset = function () {\n        this.done = false;\n        this.keep = false;\n    };\n    return BaseOperation;\n}());\nvar GroupOperation = /** @class */ (function (_super) {\n    __extends(GroupOperation, _super);\n    function GroupOperation(params, owneryQuery, options, children) {\n        var _this = _super.call(this, params, owneryQuery, options) || this;\n        _this.children = children;\n        return _this;\n    }\n    /**\n     */\n    GroupOperation.prototype.reset = function () {\n        this.keep = false;\n        this.done = false;\n        for (var i = 0, length_2 = this.children.length; i < length_2; i++) {\n            this.children[i].reset();\n        }\n    };\n    /**\n     */\n    GroupOperation.prototype.childrenNext = function (item, key, owner, root, leaf) {\n        var done = true;\n        var keep = true;\n        for (var i = 0, length_3 = this.children.length; i < length_3; i++) {\n            var childOperation = this.children[i];\n            if (!childOperation.done) {\n                childOperation.next(item, key, owner, root, leaf);\n            }\n            if (!childOperation.keep) {\n                keep = false;\n            }\n            if (childOperation.done) {\n                if (!childOperation.keep) {\n                    break;\n                }\n            }\n            else {\n                done = false;\n            }\n        }\n        this.done = done;\n        this.keep = keep;\n    };\n    return GroupOperation;\n}(BaseOperation));\nvar NamedGroupOperation = /** @class */ (function (_super) {\n    __extends(NamedGroupOperation, _super);\n    function NamedGroupOperation(params, owneryQuery, options, children, name) {\n        var _this = _super.call(this, params, owneryQuery, options, children) || this;\n        _this.name = name;\n        return _this;\n    }\n    return NamedGroupOperation;\n}(GroupOperation));\nvar QueryOperation = /** @class */ (function (_super) {\n    __extends(QueryOperation, _super);\n    function QueryOperation() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = true;\n        return _this;\n    }\n    /**\n     */\n    QueryOperation.prototype.next = function (item, key, parent, root) {\n        this.childrenNext(item, key, parent, root);\n    };\n    return QueryOperation;\n}(GroupOperation));\nvar NestedOperation = /** @class */ (function (_super) {\n    __extends(NestedOperation, _super);\n    function NestedOperation(keyPath, params, owneryQuery, options, children) {\n        var _this = _super.call(this, params, owneryQuery, options, children) || this;\n        _this.keyPath = keyPath;\n        _this.propop = true;\n        /**\n         */\n        _this._nextNestedValue = function (value, key, owner, root, leaf) {\n            _this.childrenNext(value, key, owner, root, leaf);\n            return !_this.done;\n        };\n        return _this;\n    }\n    /**\n     */\n    NestedOperation.prototype.next = function (item, key, parent) {\n        walkKeyPathValues(item, this.keyPath, this._nextNestedValue, 0, key, parent);\n    };\n    return NestedOperation;\n}(GroupOperation));\nvar createTester = function (a, compare) {\n    if (a instanceof Function) {\n        return a;\n    }\n    if (a instanceof RegExp) {\n        return function (b) {\n            var result = typeof b === \"string\" && a.test(b);\n            a.lastIndex = 0;\n            return result;\n        };\n    }\n    var comparableA = comparable(a);\n    return function (b) { return compare(comparableA, comparable(b)); };\n};\nvar EqualsOperation = /** @class */ (function (_super) {\n    __extends(EqualsOperation, _super);\n    function EqualsOperation() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = true;\n        return _this;\n    }\n    EqualsOperation.prototype.init = function () {\n        this._test = createTester(this.params, this.options.compare);\n    };\n    EqualsOperation.prototype.next = function (item, key, parent) {\n        if (!Array.isArray(parent) || parent.hasOwnProperty(key)) {\n            if (this._test(item, key, parent)) {\n                this.done = true;\n                this.keep = true;\n            }\n        }\n    };\n    return EqualsOperation;\n}(BaseOperation));\nvar createEqualsOperation = function (params, owneryQuery, options) { return new EqualsOperation(params, owneryQuery, options); };\nvar numericalOperationCreator = function (createNumericalOperation) {\n    return function (params, owneryQuery, options, name) {\n        return createNumericalOperation(params, owneryQuery, options, name);\n    };\n};\nvar numericalOperation = function (createTester) {\n    return numericalOperationCreator(function (params, owneryQuery, options, name) {\n        var typeofParams = typeof comparable(params);\n        var test = createTester(params);\n        return new EqualsOperation(function (b) {\n            var actualValue = coercePotentiallyNull(b);\n            return (typeof comparable(actualValue) === typeofParams && test(actualValue));\n        }, owneryQuery, options, name);\n    });\n};\nvar createNamedOperation = function (name, params, parentQuery, options) {\n    var operationCreator = options.operations[name];\n    if (!operationCreator) {\n        throwUnsupportedOperation(name);\n    }\n    return operationCreator(params, parentQuery, options, name);\n};\nvar throwUnsupportedOperation = function (name) {\n    throw new Error(\"Unsupported operation: \".concat(name));\n};\nvar containsOperation = function (query, options) {\n    for (var key in query) {\n        if (options.operations.hasOwnProperty(key) || key.charAt(0) === \"$\")\n            return true;\n    }\n    return false;\n};\nvar createNestedOperation = function (keyPath, nestedQuery, parentKey, owneryQuery, options) {\n    if (containsOperation(nestedQuery, options)) {\n        var _a = createQueryOperations(nestedQuery, parentKey, options), selfOperations = _a[0], nestedOperations = _a[1];\n        if (nestedOperations.length) {\n            throw new Error(\"Property queries must contain only operations, or exact objects.\");\n        }\n        return new NestedOperation(keyPath, nestedQuery, owneryQuery, options, selfOperations);\n    }\n    return new NestedOperation(keyPath, nestedQuery, owneryQuery, options, [\n        new EqualsOperation(nestedQuery, owneryQuery, options),\n    ]);\n};\nvar createQueryOperation = function (query, owneryQuery, _a) {\n    if (owneryQuery === void 0) { owneryQuery = null; }\n    var _b = _a === void 0 ? {} : _a, compare = _b.compare, operations = _b.operations;\n    var options = {\n        compare: compare || equals,\n        operations: Object.assign({}, operations || {}),\n    };\n    var _c = createQueryOperations(query, null, options), selfOperations = _c[0], nestedOperations = _c[1];\n    var ops = [];\n    if (selfOperations.length) {\n        ops.push(new NestedOperation([], query, owneryQuery, options, selfOperations));\n    }\n    ops.push.apply(ops, nestedOperations);\n    if (ops.length === 1) {\n        return ops[0];\n    }\n    return new QueryOperation(query, owneryQuery, options, ops);\n};\nvar createQueryOperations = function (query, parentKey, options) {\n    var selfOperations = [];\n    var nestedOperations = [];\n    if (!isVanillaObject(query)) {\n        selfOperations.push(new EqualsOperation(query, query, options));\n        return [selfOperations, nestedOperations];\n    }\n    for (var key in query) {\n        if (options.operations.hasOwnProperty(key)) {\n            var op = createNamedOperation(key, query[key], query, options);\n            if (op) {\n                if (!op.propop && parentKey && !options.operations[parentKey]) {\n                    throw new Error(\"Malformed query. \".concat(key, \" cannot be matched against property.\"));\n                }\n            }\n            // probably just a flag for another operation (like $options)\n            if (op != null) {\n                selfOperations.push(op);\n            }\n        }\n        else if (key.charAt(0) === \"$\") {\n            throwUnsupportedOperation(key);\n        }\n        else {\n            nestedOperations.push(createNestedOperation(key.split(\".\"), query[key], key, query, options));\n        }\n    }\n    return [selfOperations, nestedOperations];\n};\nvar createOperationTester = function (operation) {\n    return function (item, key, owner) {\n        operation.reset();\n        operation.next(item, key, owner);\n        return operation.keep;\n    };\n};\nvar createQueryTester = function (query, options) {\n    if (options === void 0) { options = {}; }\n    return createOperationTester(createQueryOperation(query, null, options));\n};\n\nvar $Ne = /** @class */ (function (_super) {\n    __extends($Ne, _super);\n    function $Ne() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = true;\n        return _this;\n    }\n    $Ne.prototype.init = function () {\n        this._test = createTester(this.params, this.options.compare);\n    };\n    $Ne.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        this.keep = true;\n    };\n    $Ne.prototype.next = function (item) {\n        if (this._test(item)) {\n            this.done = true;\n            this.keep = false;\n        }\n    };\n    return $Ne;\n}(BaseOperation));\n// https://docs.mongodb.com/manual/reference/operator/query/elemMatch/\nvar $ElemMatch = /** @class */ (function (_super) {\n    __extends($ElemMatch, _super);\n    function $ElemMatch() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = true;\n        return _this;\n    }\n    $ElemMatch.prototype.init = function () {\n        if (!this.params || typeof this.params !== \"object\") {\n            throw new Error(\"Malformed query. $elemMatch must by an object.\");\n        }\n        this._queryOperation = createQueryOperation(this.params, this.owneryQuery, this.options);\n    };\n    $ElemMatch.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        this._queryOperation.reset();\n    };\n    $ElemMatch.prototype.next = function (item) {\n        if (isArray(item)) {\n            for (var i = 0, length_1 = item.length; i < length_1; i++) {\n                // reset query operation since item being tested needs to pass _all_ query\n                // operations for it to be a success\n                this._queryOperation.reset();\n                var child = item[i];\n                this._queryOperation.next(child, i, item, false);\n                this.keep = this.keep || this._queryOperation.keep;\n            }\n            this.done = true;\n        }\n        else {\n            this.done = false;\n            this.keep = false;\n        }\n    };\n    return $ElemMatch;\n}(BaseOperation));\nvar $Not = /** @class */ (function (_super) {\n    __extends($Not, _super);\n    function $Not() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = true;\n        return _this;\n    }\n    $Not.prototype.init = function () {\n        this._queryOperation = createQueryOperation(this.params, this.owneryQuery, this.options);\n    };\n    $Not.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        this._queryOperation.reset();\n    };\n    $Not.prototype.next = function (item, key, owner, root) {\n        this._queryOperation.next(item, key, owner, root);\n        this.done = this._queryOperation.done;\n        this.keep = !this._queryOperation.keep;\n    };\n    return $Not;\n}(BaseOperation));\nvar $Size = /** @class */ (function (_super) {\n    __extends($Size, _super);\n    function $Size() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = true;\n        return _this;\n    }\n    $Size.prototype.init = function () { };\n    $Size.prototype.next = function (item) {\n        if (isArray(item) && item.length === this.params) {\n            this.done = true;\n            this.keep = true;\n        }\n        // if (parent && parent.length === this.params) {\n        //   this.done = true;\n        //   this.keep = true;\n        // }\n    };\n    return $Size;\n}(BaseOperation));\nvar assertGroupNotEmpty = function (values) {\n    if (values.length === 0) {\n        throw new Error(\"$and/$or/$nor must be a nonempty array\");\n    }\n};\nvar $Or = /** @class */ (function (_super) {\n    __extends($Or, _super);\n    function $Or() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = false;\n        return _this;\n    }\n    $Or.prototype.init = function () {\n        var _this = this;\n        assertGroupNotEmpty(this.params);\n        this._ops = this.params.map(function (op) {\n            return createQueryOperation(op, null, _this.options);\n        });\n    };\n    $Or.prototype.reset = function () {\n        this.done = false;\n        this.keep = false;\n        for (var i = 0, length_2 = this._ops.length; i < length_2; i++) {\n            this._ops[i].reset();\n        }\n    };\n    $Or.prototype.next = function (item, key, owner) {\n        var done = false;\n        var success = false;\n        for (var i = 0, length_3 = this._ops.length; i < length_3; i++) {\n            var op = this._ops[i];\n            op.next(item, key, owner);\n            if (op.keep) {\n                done = true;\n                success = op.keep;\n                break;\n            }\n        }\n        this.keep = success;\n        this.done = done;\n    };\n    return $Or;\n}(BaseOperation));\nvar $Nor = /** @class */ (function (_super) {\n    __extends($Nor, _super);\n    function $Nor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = false;\n        return _this;\n    }\n    $Nor.prototype.next = function (item, key, owner) {\n        _super.prototype.next.call(this, item, key, owner);\n        this.keep = !this.keep;\n    };\n    return $Nor;\n}($Or));\nvar $In = /** @class */ (function (_super) {\n    __extends($In, _super);\n    function $In() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = true;\n        return _this;\n    }\n    $In.prototype.init = function () {\n        var _this = this;\n        var params = Array.isArray(this.params) ? this.params : [this.params];\n        this._testers = params.map(function (value) {\n            if (containsOperation(value, _this.options)) {\n                throw new Error(\"cannot nest $ under \".concat(_this.name.toLowerCase()));\n            }\n            return createTester(value, _this.options.compare);\n        });\n    };\n    $In.prototype.next = function (item, key, owner) {\n        var done = false;\n        var success = false;\n        for (var i = 0, length_4 = this._testers.length; i < length_4; i++) {\n            var test = this._testers[i];\n            if (test(item)) {\n                done = true;\n                success = true;\n                break;\n            }\n        }\n        this.keep = success;\n        this.done = done;\n    };\n    return $In;\n}(BaseOperation));\nvar $Nin = /** @class */ (function (_super) {\n    __extends($Nin, _super);\n    function $Nin(params, ownerQuery, options, name) {\n        var _this = _super.call(this, params, ownerQuery, options, name) || this;\n        _this.propop = true;\n        _this._in = new $In(params, ownerQuery, options, name);\n        return _this;\n    }\n    $Nin.prototype.next = function (item, key, owner, root) {\n        this._in.next(item, key, owner);\n        if (isArray(owner) && !root) {\n            if (this._in.keep) {\n                this.keep = false;\n                this.done = true;\n            }\n            else if (key == owner.length - 1) {\n                this.keep = true;\n                this.done = true;\n            }\n        }\n        else {\n            this.keep = !this._in.keep;\n            this.done = true;\n        }\n    };\n    $Nin.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        this._in.reset();\n    };\n    return $Nin;\n}(BaseOperation));\nvar $Exists = /** @class */ (function (_super) {\n    __extends($Exists, _super);\n    function $Exists() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.propop = true;\n        return _this;\n    }\n    $Exists.prototype.next = function (item, key, owner, root, leaf) {\n        if (!leaf) {\n            this.done = true;\n            this.keep = !this.params;\n        }\n        else if (owner.hasOwnProperty(key) === this.params) {\n            this.done = true;\n            this.keep = true;\n        }\n    };\n    return $Exists;\n}(BaseOperation));\nvar $And = /** @class */ (function (_super) {\n    __extends($And, _super);\n    function $And(params, owneryQuery, options, name) {\n        var _this = _super.call(this, params, owneryQuery, options, params.map(function (query) { return createQueryOperation(query, owneryQuery, options); }), name) || this;\n        _this.propop = false;\n        assertGroupNotEmpty(params);\n        return _this;\n    }\n    $And.prototype.next = function (item, key, owner, root) {\n        this.childrenNext(item, key, owner, root);\n    };\n    return $And;\n}(NamedGroupOperation));\nvar $All = /** @class */ (function (_super) {\n    __extends($All, _super);\n    function $All(params, owneryQuery, options, name) {\n        var _this = _super.call(this, params, owneryQuery, options, params.map(function (query) { return createQueryOperation(query, owneryQuery, options); }), name) || this;\n        _this.propop = true;\n        return _this;\n    }\n    $All.prototype.next = function (item, key, owner, root) {\n        this.childrenNext(item, key, owner, root);\n    };\n    return $All;\n}(NamedGroupOperation));\nvar $eq = function (params, owneryQuery, options) {\n    return new EqualsOperation(params, owneryQuery, options);\n};\nvar $ne = function (params, owneryQuery, options, name) { return new $Ne(params, owneryQuery, options, name); };\nvar $or = function (params, owneryQuery, options, name) { return new $Or(params, owneryQuery, options, name); };\nvar $nor = function (params, owneryQuery, options, name) { return new $Nor(params, owneryQuery, options, name); };\nvar $elemMatch = function (params, owneryQuery, options, name) { return new $ElemMatch(params, owneryQuery, options, name); };\nvar $nin = function (params, owneryQuery, options, name) { return new $Nin(params, owneryQuery, options, name); };\nvar $in = function (params, owneryQuery, options, name) {\n    return new $In(params, owneryQuery, options, name);\n};\nvar $lt = numericalOperation(function (params) { return function (b) {\n    return b != null && b < params;\n}; });\nvar $lte = numericalOperation(function (params) { return function (b) {\n    return b === params || b <= params;\n}; });\nvar $gt = numericalOperation(function (params) { return function (b) {\n    return b != null && b > params;\n}; });\nvar $gte = numericalOperation(function (params) { return function (b) {\n    return b === params || b >= params;\n}; });\nvar $mod = function (_a, owneryQuery, options) {\n    var mod = _a[0], equalsValue = _a[1];\n    return new EqualsOperation(function (b) { return comparable(b) % mod === equalsValue; }, owneryQuery, options);\n};\nvar $exists = function (params, owneryQuery, options, name) { return new $Exists(params, owneryQuery, options, name); };\nvar $regex = function (pattern, owneryQuery, options) {\n    return new EqualsOperation(new RegExp(pattern, owneryQuery.$options), owneryQuery, options);\n};\nvar $not = function (params, owneryQuery, options, name) { return new $Not(params, owneryQuery, options, name); };\nvar typeAliases = {\n    number: function (v) { return typeof v === \"number\"; },\n    string: function (v) { return typeof v === \"string\"; },\n    bool: function (v) { return typeof v === \"boolean\"; },\n    array: function (v) { return Array.isArray(v); },\n    null: function (v) { return v === null; },\n    timestamp: function (v) { return v instanceof Date; },\n};\nvar $type = function (clazz, owneryQuery, options) {\n    return new EqualsOperation(function (b) {\n        if (typeof clazz === \"string\") {\n            if (!typeAliases[clazz]) {\n                throw new Error(\"Type alias does not exist\");\n            }\n            return typeAliases[clazz](b);\n        }\n        return b != null ? b instanceof clazz || b.constructor === clazz : false;\n    }, owneryQuery, options);\n};\nvar $and = function (params, ownerQuery, options, name) { return new $And(params, ownerQuery, options, name); };\nvar $all = function (params, ownerQuery, options, name) { return new $All(params, ownerQuery, options, name); };\nvar $size = function (params, ownerQuery, options) { return new $Size(params, ownerQuery, options, \"$size\"); };\nvar $options = function () { return null; };\nvar $where = function (params, ownerQuery, options) {\n    var test;\n    if (isFunction(params)) {\n        test = params;\n    }\n    else if (!process.env.CSP_ENABLED) {\n        test = new Function(\"obj\", \"return \" + params);\n    }\n    else {\n        throw new Error(\"In CSP mode, sift does not support strings in \\\"$where\\\" condition\");\n    }\n    return new EqualsOperation(function (b) { return test.bind(b)(b); }, ownerQuery, options);\n};\n\nvar defaultOperations = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    $Size: $Size,\n    $all: $all,\n    $and: $and,\n    $elemMatch: $elemMatch,\n    $eq: $eq,\n    $exists: $exists,\n    $gt: $gt,\n    $gte: $gte,\n    $in: $in,\n    $lt: $lt,\n    $lte: $lte,\n    $mod: $mod,\n    $ne: $ne,\n    $nin: $nin,\n    $nor: $nor,\n    $not: $not,\n    $options: $options,\n    $or: $or,\n    $regex: $regex,\n    $size: $size,\n    $type: $type,\n    $where: $where\n});\n\nvar createDefaultQueryOperation = function (query, ownerQuery, _a) {\n    var _b = _a === void 0 ? {} : _a, compare = _b.compare, operations = _b.operations;\n    return createQueryOperation(query, ownerQuery, {\n        compare: compare,\n        operations: Object.assign({}, defaultOperations, operations || {}),\n    });\n};\nvar createDefaultQueryTester = function (query, options) {\n    if (options === void 0) { options = {}; }\n    var op = createDefaultQueryOperation(query, null, options);\n    return createOperationTester(op);\n};\n\nexport { $Size, $all, $and, $elemMatch, $eq, $exists, $gt, $gte, $in, $lt, $lte, $mod, $ne, $nin, $nor, $not, $options, $or, $regex, $size, $type, $where, EqualsOperation, createDefaultQueryOperation, createEqualsOperation, createOperationTester, createQueryOperation, createQueryTester, createDefaultQueryTester as default };\n//# sourceMappingURL=index.js.map\n","const {\n\tevalFunction\n\t, attributeEscapes\n\t, fetchValue\n\t, isOrContains\n\t, escForRegex\n\t, escapeAttributeValue\n} = require('value-injector-common')\n\n\nlet nameAttrPattern = /\\sname=[\"'](.*?)[\"']/i\nlet valAttrPattern = /\\svalue=[\"'](.*?)[\"']/i\nlet typeAttrPattern = /\\stype=[\"'](.*?)[\"']/i\nlet textareaPattern = /(<textarea[\\w\\W]*?textarea\\w*>)/im\nlet selectedAttrPattern = /\\sselected(=[\"'](.*?)[\"'])?/i\n\n\nlet injectValues = function(text, values) {\n\t\n\tlet result = ''\n\t\n\ttext.split(textareaPattern).forEach((item) => {\n\t\tif(item.toLowerCase().indexOf('<textarea') == 0) {\n\t\t\tlet r = item.match(nameAttrPattern)\n\t\t\tlet name = r ? r[1] : null\n\t\t\t\n\t\t\tif(name) {\n\t\t\t\tlet newVal = fetchValue(values, name)\n\t\t\t\tif(typeof newVal != 'undefined' && newVal !== null) {\n\t\t\t\t\tlet startTagEnd = item.indexOf('>')\n\t\t\t\t\tlet endTagStart = item.lastIndexOf('<')\n\t\t\t\t\titem = item.substring(0, startTagEnd + 1) + newVal + item.substring(endTagStart)\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult += item\n\t\t}\n\t\telse {\n\t\t\tresult += item\n\t\t}\n\t})\n\t\n\treturn result\n}\n\n\nmodule.exports = injectValues","\nconst defaultTemplateName = 'defaultTemplate'\n\nclass ActiveElement {\n\tconstructor(conditionalExpression, dataExpression, handlingExpression, tripartite) {\n\t\tthis.conditionalExpression = conditionalExpression\n\t\tthis.dataExpression = dataExpression\n\t\tthis.handlingExpression = handlingExpression || defaultTemplateName\n\t\tthis.tripartite = tripartite\n\t}\n}\n\nmodule.exports = ActiveElement","var calculateRelativePath = function(parentPath, currentPath) {\n\tif(!parentPath) {\n\t\treturn currentPath\n\t}\n\tif(!currentPath) {\n\t\treturn currentPath\n\t}\n\t\n\tif(currentPath.indexOf('../') != 0 && currentPath.indexOf('./') != 0) {\n\t\treturn currentPath\n\t}\n\t\n\tvar pparts = parentPath.split('/')\n\tvar cparts = currentPath.split('/')\n\t\n\t// trim any starting blank sections\n\twhile(pparts.length && !pparts[0]) {\n\t\tpparts.shift()\n\t}\n\twhile(cparts.length && !cparts[0]) {\n\t\tcparts.shift()\n\t}\n\t\n\tif(currentPath.indexOf('../') == 0 ) {\n\t\twhile(cparts.length && cparts[0] == '..') {\n\t\t\tpparts.pop()\n\t\t\tcparts.shift()\n\t\t}\n\t\tpparts.pop()\n\t\t\n\t\twhile(cparts.length) {\n\t\t\tpparts.push(cparts.shift())\n\t\t}\n\t\treturn pparts.join('/')\n\t}\n\tif(currentPath.indexOf('./') == 0 ) {\n\t\tcparts.shift()\n\t\tpparts.pop()\n\t\twhile(cparts.length) {\n\t\t\tpparts.push(cparts.shift())\n\t\t}\n\t\treturn pparts.join('/')\n\t}\n\t\n\treturn currentPath\n}\n\nmodule.exports = calculateRelativePath","\nconst resolveDataPath = require('./resolve-data-path')\nfunction evaluateInContext(context, expression, dataFunctions, globalData) {\n\tif (!expression) {\n\t\treturn null\n\t}\n\tif (typeof expression === 'string') {\n\t\texpression = expression.trim()\n\t}\n\n\tif (expression === '$this' || expression === 'this') {\n\t\treturn context\n\t}\n\tif (typeof context === 'object' && expression in context) {\n\t\treturn context[expression]\n\t}\n\tif (expression === '\"\"' || expression === \"''\") {\n\t\treturn ''\n\t}\n\tlet resolved = resolveDataPath(context, expression)\n\tif (resolved === null || resolved === undefined) {\n\t\tresolved = resolveDataPath({\n\t\t\t'$globals': globalData\n\t\t}, expression)\n\t}\n\tif (resolved === null || resolved === undefined) {\n\t\tresolved = _evaluateInContext.call(context, context, expression, dataFunctions, globalData)\n\t}\n\treturn resolved\n}\n\nlet evalFunction = new Function('additionalContexts',\n\t`with ({\n\t\t'$globals': additionalContexts.globalData\n\t}) {\n\t\twith (additionalContexts.dataFunctions) {\n\t\t\twith (additionalContexts.context) {\n\t\t\t\ttry {\n\t\t\t\t\treturn eval(additionalContexts.expression);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}`\n)\n\nfunction _evaluateInContext(context, expression, dataFunctions, globalData) {\n\tdataFunctions = dataFunctions || {}\n\tglobalData = globalData || {}\n\n\n\tlet result = evalFunction.call(this, {\n\t\tglobalData: globalData\n\t\t, dataFunctions: dataFunctions\n\t\t, context: context\n\t\t, expression: expression\n\t})\n\treturn result\n}\n\nmodule.exports = evaluateInContext","\nlet ActiveElement = require('./active-element')\nvar calculateRelativePath = require('./calculate-relative-path')\nlet evaluateInContext = require('./evaluate-in-context')\n\nclass ExecutionContext {\n\t/**\n\t * \n\t * @param {Tripartite} tripartite \n\t * @param {function} template \n\t * @param {stream} [destination]\n\t */\n\tconstructor(tripartite, template, data = {}, destination = '', dataFunctions = {}) {\n\t\tthis.tripartite = tripartite\n\t\tthis.template = template\n\t\tthis.destination = destination\n\t\tthis.initialData = data\n\t\tthis.currentData = []\n\t\tthis.dataFunctions = dataFunctions\n\t\tthis.continueOnTripartiteError = true\n\t\t\n\t\t// Sometimes large pages have so many elements that we exceed\n\t\t// the maximum call depth. This happens when we have a lot of elements all being\n\t\t// rendered by the same templates. That is, there's no async callback when a template\n\t\t// is loaded, only instant callbacks.\n\t\t// The downside to doing very frequent async calls is that it takes a lot longer to\n\t\t// to get called from a setTimeout than it does to call directly. We want ot keep\n\t\t// the time between needing to do that reasonably long. Unfortunately, there's no\n\t\t// easy/fast way to detect the call stack depth, so we rely on this proxy.\n\t\tthis.callCount = 0\n\t\tthis.callDepthLimit = 1000\n\t}\n\n\t/**\n\t * \n\t * @param {function} [callback] called when done\n\t * @returns Returns the string of stream as the result of the operation\n\t */\n\trun(callback) {\n\t\tlet ourCallback\n\t\tif (callback) {\n\t\t\tourCallback = () => {\n\t\t\t\tcallback(null, this.destination)\n\t\t\t}\n\t\t}\n\n\t\tthis._run(this.template, this.initialData, ourCallback)\n\n\t\treturn this.destination\n\t}\n\n\t_resolveHandlingExpression(template, handlingExpression, data) {\n\t\tif (!handlingExpression) {\n\t\t\thandlingExpression = defaultTemplateName\n\t\t}\n\t\tif (handlingExpression.charAt(0) == '$') {\n\t\t\t// Indicates the handling espression is not a literal template name but is a string which should\n\t\t\t// be evaluated to determine the template name\n\t\t\thandlingExpression = evaluateInContext(data, handlingExpression.substring(1), this.dataFunctions, this.initialData)\n\t\t}\n\t\t// resolve relative template paths\n\t\tif (handlingExpression.indexOf('./') == 0 || handlingExpression.indexOf('../') == 0) {\n\t\t\thandlingExpression = calculateRelativePath(template.templateMeta.name, handlingExpression)\n\t\t}\n\n\t\treturn handlingExpression\n\t}\n\n\t_run(template, data, callback) {\n\t\tlet parts = [...template.parts].reverse()\n\t\tconst processParts = () => {\n\t\t\t\n\t\t\t// check to see how far down in the call stack we are. If too far down,\n\t\t\t// come back in the next tick.\n\t\t\tthis.callCount++\n\t\t\tif(this.callCount++ > this.callDepthLimit) {\n\t\t\t\tsetTimeout(()=> {\n\t\t\t\t\tthis.callCount = 0\n\t\t\t\t\tprocessParts()\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (parts.length > 0) {\n\t\t\t\tlet part = parts.pop()\n\t\t\t\tif (typeof part === 'string') {\n\t\t\t\t\tthis.output(part)\n\t\t\t\t\tprocessParts()\n\t\t\t\t}\n\t\t\t\telse if (part instanceof ActiveElement) {\n\t\t\t\t\tlet conditional = part.conditionalExpression || part.dataExpression\n\t\t\t\t\tlet conditionalResult = false\n\t\t\t\t\tlet resultData\n\t\t\t\t\tif (conditional == null || conditional == undefined || conditional === '') {\n\t\t\t\t\t\t// Because if they didn't specify a condition or data, they probably \n\t\t\t\t\t\t// just want the template to be run as is\n\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(part.conditionalExpression) {\n\t\t\t\t\t\t\tlet result = evaluateInContext(data, part.conditionalExpression, this.dataFunctions, this.initialData)\n\t\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// This means we're evaluating the data expression to see if we should run the template\n\t\t\t\t\t\t\tresultData = evaluateInContext(data, part.dataExpression, this.dataFunctions, this.initialData)\n\t\t\t\t\t\t\tif(resultData === null || resultData === undefined) {\n\t\t\t\t\t\t\t\tconditionalResult = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (typeof resultData === 'number') {\n\t\t\t\t\t\t\t\t// if the result is a number, any number, we want to output it\n\t\t\t\t\t\t\t\t// unless the number is from the conditional expression, in which\n\t\t\t\t\t\t\t\t// case we want to evaluate it as truthy\n\t\t\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(Array.isArray(resultData) && resultData.length > 0) {\n\t\t\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(resultData) {\n\t\t\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (conditionalResult) {\n\t\t\t\t\t\tif (part.dataExpression && resultData === undefined) {\n\t\t\t\t\t\t\tresultData = evaluateInContext(data, part.dataExpression, this.dataFunctions, this.initialData)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif((resultData === null || resultData === undefined) && !part.dataExpression) {\n\t\t\t\t\t\t\tresultData = data\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet handlingExpression = this._resolveHandlingExpression(template, part.handlingExpression, data)\n\t\t\t\t\t\tlet handlingTemplate\n\t\t\t\t\t\tlet children = (Array.isArray(resultData) ? [...resultData] : [resultData]).reverse()\n\t\t\t\t\t\tconst applyTemplate = () => {\n\t\t\t\t\t\t\tif (children.length > 0) {\n\t\t\t\t\t\t\t\tlet child = children.pop()\n\t\t\t\t\t\t\t\tthis._run(handlingTemplate, child, () => {\n\t\t\t\t\t\t\t\t\tapplyTemplate()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(handlingExpression in this.tripartite.templates) {\n\t\t\t\t\t\t\thandlingTemplate = this.tripartite.getTemplate(handlingExpression)\n\t\t\t\t\t\t\tif (handlingTemplate) {\n\t\t\t\t\t\t\t\tapplyTemplate()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// the template has been loaded before but is empty\n\t\t\t\t\t\t\t\tif (this.continueOnTripartiteError) {\n\t\t\t\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.tripartite.loadTemplate(handlingExpression, (template) => {\n\t\t\t\t\t\t\t\tif (!template) {\n\t\t\t\t\t\t\t\t\tlet msg = 'Could not load template: ' + handlingExpression\n\t\t\t\t\t\t\t\t\tconsole.error(msg)\n\t\t\t\t\t\t\t\t\tif (this.continueOnTripartiteError) {\n\t\t\t\t\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tlet err = new Error(msg)\n\t\t\t\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\t\t\t\tcallback(err)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tthrow err\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\thandlingTemplate = template\n\t\t\t\t\t\t\t\t\tapplyTemplate()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (typeof part === 'function') {\n\t\t\t\t\tif(part.write) {\n\t\t\t\t\t\tpart.write(data, this.destination, () => {\n\t\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t\t})\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.output(part(data))\n\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprocessParts()\n\t}\n\n\t/**\n\t * \n\t * @param {string} value \n\t */\n\toutput(value) {\n\t\tif(value === null || value === undefined) {\n\t\t\treturn\n\t\t}\n\t\tif (typeof this.destination === 'string') {\n\t\t\tthis.destination += value\n\t\t}\n\t\telse if (this.destination.write) {\n\t\t\tthis.destination.write(value)\n\t\t}\n\t}\n}\n\n\nmodule.exports = ExecutionContext","/*\nfunction resolveDataPath(data, path) {\n\tif(data === null || data === undefined) {\n\t\treturn data\n\t}\n\tlet parts\n\tif(typeof path === 'string') {\n\t\tparts = path.trim().split('.')\n\t}\n\telse if(Array.isArray(path)) {\n\t\tparts = path\n\t}\n\t\n\tlet name = parts.shift()\n\tif(name.indexOf(' ') > -1) {\n\t\t// there's a space, which means it's really unlikely it's a property\n\t\treturn null\n\t}\n\tlet child\n\tif(name === 'this' || name === '$this') {\n\t\tchild = data\n\t}\n\telse if(typeof data === 'object') {\n\t\tif(name in data) {\n\t\t\tchild = data[name]\n\t\t}\n\t}\n\tif(parts.length > 0) {\n\t\treturn resolveDataPath(child, parts)\n\t}\n\telse {\n\t\treturn child\n\t}\n} */\nfunction resolveDataPath(data, path) {\n\ttry {\n\t\tif (data === null || data === undefined) {\n\t\t\treturn data\n\t\t}\n\t\tlet parts\n\t\tif (typeof path === 'string') {\n\t\t\tparts = path.trim().split('.')\n\t\t}\n\t\telse if (Array.isArray(path)) {\n\t\t\tparts = path\n\t\t}\n\n\t\twhile (parts.length > 0) {\n\t\t\tlet name = parts.shift()\n\t\t\tif (name.indexOf(' ') > -1) {\n\t\t\t\t// there's a space, which means it's really unlikely it's a property\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tlet child\n\t\t\tif (name === 'this' || name === '$this') {\n\t\t\t\tchild = data\n\t\t\t}\n\t\t\telse if (typeof data === 'object') {\n\t\t\t\tif (name in data) {\n\t\t\t\t\tchild = data[name]\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (parts.length == 0) {\n\t\t\t\treturn child\n\t\t\t}\n\t\t\tif (child === null || child === undefined) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tdata = child\n\t\t}\n\t}\n\tcatch (e) {\n\t\treturn null\n\t}\n}\n\nmodule.exports = resolveDataPath","\n\n\nif (typeof String.prototype.trim !== 'function') {\n\tString.prototype.trim = function () {\n\t\treturn this.replace(/^\\s+|\\s+$/g, '');\n\t}\n}\n\n\nfunction isStream(stream) {\n\treturn stream !== null\n\t\t&& typeof stream === 'object'\n\t\t&& typeof stream.pipe === 'function';\n}\n\n\nfunction isTemplate(obj) {\n\tif (!obj) {\n\t\treturn false\n\t}\n\tif (typeof obj !== 'function') {\n\t\treturn false\n\t}\n\tif (!obj.write) {\n\t\treturn false\n\t}\n\tif (!obj.parts) {\n\t\treturn false\n\t}\n\tif (!obj.templateMeta) {\n\t\treturn false\n\t}\n\n\treturn true\n}\n\nlet ExecutionContext = require('./execution-context')\nlet ActiveElement = require('./active-element')\n\n\nclass Tripartite {\n\tconstructor(options = {}) {\n\t\tthis.templates = {\n\t\t\tdefaultTemplate: this._makeTemplate(function (thedata) {\n\t\t\t\treturn '' + thedata;\n\t\t\t})\n\t\t}\n\t\tlet { constants = {\n\t\t\ttemplateBoundary: '__',\n\t\t\ttemplateNameBoundary: '##'\n\t\t} } = options\n\t\tthis.constants = constants\n\n\t\t// This object (if set) will receive the template functions parsed from a script\n\t\t// I want to be able to call my templates as global functions, so I've set it\n\t\t// to be the window object\n\t\tthis.secondaryTemplateFunctionObject = options.secondaryTemplateFunctionObject\n\n\t\tthis.loaders = options.loaders || []\n\n\t\tthis.dataFunctions = options.dataFunction || {}\n\t}\n\n\t_makeTemplate(transformationFunction) {\n\t\tif (isTemplate(transformationFunction)) {\n\t\t\treturn transformationFunction\n\t\t}\n\t\tlet tri = this\n\t\tlet f = function (thedata) {\n\t\t\tlet stream = null\n\t\t\tlet options = null\n\t\t\tlet callback = null\n\t\t\tfor (let i = 1; i < arguments.length; i++) {\n\t\t\t\tlet arg = arguments[i]\n\t\t\t\tif (isStream(arg)) {\n\t\t\t\t\tstream = arg\n\t\t\t\t}\n\t\t\t\telse if(typeof arg === 'function') {\n\t\t\t\t\tcallback = arg\n\t\t\t\t}\n\t\t\t\telse if(typeof arg === 'object') {\n\t\t\t\t\toptions = arg\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn f.write(thedata, stream, callback, options)\n\t\t}\n\t\tf.write = function (thedata, stream, callback, options = {}) {\n\t\t\tif(transformationFunction && transformationFunction.write) {\n\t\t\t\t// if it's not a template, but has a write method, invoke the right method directly\n\t\t\t\treturn transformationFunction.write.apply(transformationFunction, arguments)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet dest = stream || ''\n\n\t\t\t\tlet context = new ExecutionContext(tri, f, thedata, dest, tri.dataFunctions)\n\t\t\t\tif (options && 'continueOnTripartiteError' in options) {\n\t\t\t\t\tcontext.continueOnTripartiteError = options.continueOnTripartiteError\n\t\t\t\t}\n\n\t\t\t\treturn context.run(callback)\n\t\t\t}\n\t\t}\n\t\tf.parts = []\n\t\tif (transformationFunction && typeof transformationFunction === 'function') {\n\t\t\tf.parts.push(transformationFunction)\n\t\t}\n\t\tf.templateMeta = {}\n\t\treturn f\n\t}\n\n\taddTemplate(name, template) {\n\t\tif (typeof template === 'string') {\n\t\t\ttemplate = this.parseTemplate(template);\n\t\t}\n\t\telse if (typeof template === 'function') {\n\t\t\ttemplate = this._makeTemplate(template)\n\t\t}\n\n\t\tthis.templates[name] = template;\n\t\ttemplate.templateMeta = template.templateMeta || {}\n\t\ttemplate.templateMeta.name = name\n\t\treturn template;\n\t}\n\n\tcreateBlank() {\n\t\treturn new Tripartite()\n\t}\n\n\tgetTemplate(name) {\n\t\treturn this.templates[name]\n\t}\n\n\tloadTemplate(name, callback) {\n\t\tif (name in this.templates) {\n\t\t\tcallback(this.templates[name])\n\t\t}\n\t\telse {\n\t\t\tlet tri = this\n\t\t\tlet count = this.loaders.length\n\t\t\tlet done = false\n\n\t\t\tif (count == 0) {\n\t\t\t\ttri.templates[name] = null\n\t\t\t\tcallback(tri.getTemplate(name))\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.loaders.forEach(loader => {\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tloader(name, template => {\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcount--\n\t\t\t\t\t\tif (template) {\n\t\t\t\t\t\t\tdone = true\n\t\t\t\t\t\t\ttri.addTemplate(name, template)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (count == 0) {\n\t\t\t\t\t\t\tdone = true\n\t\t\t\t\t\t\ttri.templates[name] = null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tcallback(tri.getTemplate(name))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\tparseTemplateScript(tx) {\n\t\tvar tks = this.tokenizeTemplateScript(tx);\n\t\t/* current template name */\n\t\tvar ctn = null;\n\t\tfor (var i = 0; i < tks.length; i++) {\n\t\t\tvar token = tks[i];\n\t\t\tif (token.active) {\n\t\t\t\tctn = token.content;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (ctn) {\n\t\t\t\t\tvar template = this.addTemplate(ctn, this.stripTemplateWhitespace(token.content));\n\t\t\t\t\tif (this.secondaryTemplateFunctionObject) {\n\t\t\t\t\t\tthis.secondaryTemplateFunctionObject[ctn] = template;\n\t\t\t\t\t}\n\t\t\t\t\tctn = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstripTemplateWhitespace(txt) {\n\t\tvar i = txt.indexOf('\\n');\n\t\tif (i > -1 && txt.substring(0, i).trim() == '') {\n\t\t\ttxt = txt.substring(i + 1);\n\t\t}\n\t\ti = txt.lastIndexOf('\\n');\n\t\tif (i > -1 && txt.substring(i).trim() == '') {\n\t\t\ttxt = txt.substring(0, i);\n\t\t}\n\t\treturn txt;\n\t}\n\n\t/* simple template */\n\t_createActiveElement(/* conditional expression */ cd, data, /* handling expression */ hd, tripartite, templateMeta) {\n\t\tlet el = new ActiveElement(cd, data, hd, tripartite);\n\t\tel.templateMeta = templateMeta\n\t\treturn el\n\t}\n\tpt(tx) {\n\t\treturn this.parseTemplate(tx)\n\t}\n\t/* parse template */\n\tparseTemplate(tx) {\n\t\tvar tks = this.tokenizeTemplate(tx);\n\t\tlet t = this._makeTemplate()\n\t\tvar templateMeta = t.templateMeta\n\n\t\tfor (let tk of tks) {\n\t\t\tif (tk.active) {\n\t\t\t\tt.parts.push(this.tokenizeActivePart(tk.content, templateMeta));\n\t\t\t}\n\t\t\telse if (tk.content) {\n\t\t\t\tt.parts.push(tk.content);\n\t\t\t}\n\t\t}\n\n\t\treturn t\n\t}\n\n\ttokenizeActivePart(tx, templateMeta) {\n\t\tvar con = null;\n\t\tvar dat = null;\n\t\tvar han = null;\n\n\t\t/* condition index */\n\t\tvar ci = tx.indexOf('??');\n\t\tif (ci > -1) {\n\t\t\tcon = tx.substring(0, ci);\n\t\t\tci += 2;\n\t\t}\n\t\telse {\n\t\t\tci = 0;\n\t\t}\n\n\t\t/* handler index */\n\t\tvar hi = tx.indexOf('::');\n\t\tif (hi > -1) {\n\t\t\tdat = tx.substring(ci, hi);\n\t\t\than = tx.substring(hi + 2);\n\t\t}\n\t\telse {\n\t\t\tdat = tx.substring(ci);\n\t\t}\n\t\treturn this._createActiveElement(con, dat, han, this, templateMeta);\n\t}\n\n\ttokenizeTemplate(tx) {\n\t\treturn this.tokenizeActiveAndInactiveBlocks(tx, this.constants.templateBoundary);\n\t}\n\n\n\t/** tokenize template script */\n\ttokenizeTemplateScript(tx) {\n\t\treturn this.tokenizeActiveAndInactiveBlocks(tx, this.constants.templateNameBoundary);\n\t}\n\n\t/* tokenize active and inactive blocks */\n\ttokenizeActiveAndInactiveBlocks(text, /*Active Region Boundary */ boundary) {\n\t\t/* whole length */\n\t\tlet length = text.length\n\n\t\t/* current position */\n\t\tlet position = 0\n\n\t\t/* are we in an active region */\n\t\tlet act = false\n\n\t\tlet tokens = []\n\n\t\twhile (position < length) {\n\t\t\tlet i = text.indexOf(boundary, position);\n\t\t\tif (i == -1) {\n\t\t\t\ti = length;\n\t\t\t}\n\t\t\tvar tk = { active: act, content: text.substring(position, i) };\n\t\t\ttokens.push(tk);\n\t\t\tposition = i + boundary.length;\n\t\t\tact = !act;\n\t\t}\n\n\t\treturn tokens;\n\t}\n\n}\nvar tripartiteInstance = new Tripartite()\n\nif (typeof window != 'undefined') {\n\ttripartiteInstance.secondaryTemplateFunctionObject = window\n}\n\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = tripartiteInstance\n}\nelse {\n\twindow.Tripartite = tripartiteInstance\n}\n\nif (typeof global != 'undefined') {\n\tif (!global.Tripartite) {\n\t\tglobal.Tripartite = Tripartite\n\t}\n\tif (!global.tripartite) {\n\t\tglobal.tripartite = tripartiteInstance\n\t}\n}\n\n","\nlet attributeEscapes = {\n\t'&': '&amp;'\n\t, '\"': '&quot;'\n\t, '<': '&lt;'\n}\n\nlet evalFunction = new Function('data',\n\t`with (data.context) {\n\t\ttry {\n\t\t\treturn eval(data.expression);\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t}`\n)\n\nfunction fetchValue(obj, path) {\n\tif(typeof obj === 'null' || typeof obj === 'undefined') {\n\t\treturn null\n\t}\n\treturn evalFunction.call(this, {\n\t\tcontext: obj\n\t\t, expression: path\n\t})\n}\n\n\nfunction isOrContains(target, possible) {\n\tif(Array.isArray(possible)) {\n\t\treturn possible.includes(target)\n\t}\n\telse {\n\t\treturn target == possible\n\t}\n}\n\nfunction escForRegex(val) {\n\tif(val && val.replace) {\n\t\treturn val.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\n\t}\n\telse {\n\t\treturn val;\n\t}\n}\n\nfunction escapeAttributeValue(attr) {\n\tif(attr === null || attr === undefined) {\n\t\tattr = ''\n\t}\n\tif(typeof attr !== 'string') {\n\t\tattr = '' + attr\n\t}\n\tfor(let [key, value] of Object.entries(attributeEscapes)) {\n\t\tattr = attr.split(key).join(value)\n\t}\n\treturn attr\n}\n\n\nmodule.exports = {\n\tevalFunction\n\t, attributeEscapes\n\t, fetchValue\n\t, isOrContains\n\t, escForRegex\n\t, escapeAttributeValue\n}\n","var tri = require(\"tripartite\"); var t = \"<div class=\\\"record-table-frame __displayClasses__\\\">\\n\\t<div class=\\\"actions\\\">\\n\\t\\t<div class=\\\"global\\\">\\n\\t\\t\\t<!-- <button class=\\\"create\\\" type=\\\"button\\\">Create New<\\/button>\\t -->\\n\\t\\t<\\/div>\\n\\t\\t<div class=\\\"options\\\">\\n\\t\\t\\t<button type=\\\"button\\\" name=\\\"fieldOptions\\\">Choose Fields<\\/button>\\n\\n\\t\\t<\\/div>\\n\\t<\\/div>\\n\\t<div class=\\\"search\\\">\\n\\n\\t\\t<div class=\\\"comparison-def\\\">\\n\\t\\t\\t<button class=\\\"show-all\\\" type=\\\"button\\\">Show All<\\/button>\\n\\t\\t\\t- or -\\n\\t\\t\\t<label>\\n\\t\\t\\t\\tField\\n\\t\\t\\t\\t<select name=\\\"searchField\\\">\\n\\t\\t\\t\\t\\t<option value=\\\"\\\">-- choose field --<\\/option>\\n\\t\\t\\t\\t\\t__fieldOptions__\\n\\t\\t\\t\\t<\\/select>\\n\\n\\t\\t\\t<\\/label>\\n\\t\\t\\t<label>\\n\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t<select name=\\\"matchesBecause\\\">\\n\\t\\t\\t\\t\\t<option value=\\\"contains\\\">contains<\\/option>\\n\\t\\t\\t\\t\\t<option value=\\\"equals\\\">equals<\\/option>\\n\\t\\t\\t\\t\\t<option value=\\\"gt\\\">is greater than<\\/option>\\n\\t\\t\\t\\t\\t<option value=\\\"lt\\\">is less than<\\/option>\\n\\t\\t\\t\\t<\\/select>\\n\\n\\t\\t\\t<\\/label>\\n\\n\\t\\t\\t<label>\\n\\t\\t\\t\\tValue\\n\\t\\t\\t\\t<input name=\\\"search\\\" type=\\\"text\\\" \\/>\\n\\t\\t\\t<\\/label>\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"do-search\\\">Search<\\/button>\\n\\t\\t<\\/div>\\n\\n\\t<\\/div>\\n\\t<div class=\\\"filter\\\">\\n\\t<\\/div>\\n\\t<div class=\\\"columns\\\">\\n\\n\\t<\\/div>\\n\\t<div class=\\\"row-work\\\">\\n\\t\\t<div class=\\\"status\\\">\\n\\t\\t\\t<p>\\n\\t\\t\\t\\tSearch for records or \\n\\t\\t\\t\\t<button class=\\\"show-all\\\" type=\\\"button\\\">Show All<\\/button>\\n\\t\\t\\t<\\/p>\\n\\t\\t<\\/div>\\n\\t\\t<div class=\\\"row-options\\\">\\n\\t\\t\\t<button class=\\\"edit-row\\\" type=\\\"button\\\">Edit<\\/button>\\n\\t\\t\\t<button class=\\\"delete-rows\\\" type=\\\"button\\\">Delete<\\/button>\\n\\t\\t\\t\\n\\t\\t<\\/div>\\n\\t<\\/div>\\n\\t<div class=\\\"records\\\">\\n\\n\\n\\t<\\/div>\\n\\n<\\/div>\"; \nmodule.exports = tri.addTemplate(\"views/webhandle/record-table/frame\", t); ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import startupDynamicPriceList from \"./dynamic-products-list.mjs\"\n\nstartupDynamicPriceList()\n"],"names":[],"sourceRoot":""}